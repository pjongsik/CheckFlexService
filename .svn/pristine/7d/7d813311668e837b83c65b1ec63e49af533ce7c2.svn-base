//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.34014
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 이 소스 코드가 Microsoft.VSDesigner, 버전 4.0.30319.34014에서 자동으로 생성되었습니다.
// 
#pragma warning disable 1591

namespace CheckFlexService.kr.co.mainticket.strawberry {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FlexServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Product))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductImage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Schedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScheduleTime))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScheduleGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Common))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MyPage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BoardSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductMap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductOption))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Postal))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TicketSale))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OptionSale))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomerCMS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MemberInformation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MemberKind))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Payment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class FlexService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetProductGroupByBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductByBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductByTimeTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleByBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleByTimeTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleByGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommonByGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalBongGetMyPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBaseDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoardScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleByGroupMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBookDetailByTicketSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBookDetailByTicketRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBookDetailByOptionSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerCMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnMemberLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberLoginByGuestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberDiscountDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnMemberCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberKindOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductBySeatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShopPaymentByWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookingOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookingByGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookingByGroupNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookingByTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductFilterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveBookByBankInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMemberDiscountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMemberDiscountCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveBankInfomationOrCarNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback LodgingRefundByWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback LodgingRefundByWeb2OperationCompleted;
        
        private System.Threading.SendOrPostCallback RefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback Refund2OperationCompleted;
        
        private System.Threading.SendOrPostCallback BookPaymentByGeneralCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookPaymentByISPOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookPaymentBy3DOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookPaymentByRealAccountKFTCOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookPaymentByRealAccountKFTCByAuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookPaymentByVirtualOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookPaymentByMobileOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookAfterApprovalCashSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticationMobilePaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBookRefundedOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileCertificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMemberCertificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RealNameCertificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RealNameCertificationOtherOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberIdCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback MemberJoinOperationCompleted;
        
        private System.Threading.SendOrPostCallback MemberJoinByIPinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberExistsByMobileNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberIdByMobileNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMemberPwOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardSequenceNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMemberByWithdrawOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMemberByEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrawEndDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FlexService() {
            this.Url = global::CheckFlexService.Properties.Settings.Default.CheckFlexService_kr_co_mainticket_strawberry_FlexService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetProductGroupByBookCompletedEventHandler GetProductGroupByBookCompleted;
        
        /// <remarks/>
        public event GetProductByBookCompletedEventHandler GetProductByBookCompleted;
        
        /// <remarks/>
        public event GetProductByTimeTableCompletedEventHandler GetProductByTimeTableCompleted;
        
        /// <remarks/>
        public event GetProductImageCompletedEventHandler GetProductImageCompleted;
        
        /// <remarks/>
        public event GetScheduleByBookCompletedEventHandler GetScheduleByBookCompleted;
        
        /// <remarks/>
        public event GetScheduleByTimeTableCompletedEventHandler GetScheduleByTimeTableCompleted;
        
        /// <remarks/>
        public event GetScheduleByGroupCompletedEventHandler GetScheduleByGroupCompleted;
        
        /// <remarks/>
        public event GetCommonByGroupCompletedEventHandler GetCommonByGroupCompleted;
        
        /// <remarks/>
        public event GetMyPageCompletedEventHandler GetMyPageCompleted;
        
        /// <remarks/>
        public event CalBongGetMyPageCompletedEventHandler CalBongGetMyPageCompleted;
        
        /// <remarks/>
        public event GetBaseDataCompletedEventHandler GetBaseDataCompleted;
        
        /// <remarks/>
        public event GetBoardScheduleCompletedEventHandler GetBoardScheduleCompleted;
        
        /// <remarks/>
        public event GetProductMapCompletedEventHandler GetProductMapCompleted;
        
        /// <remarks/>
        public event GetScheduleByGroupMapCompletedEventHandler GetScheduleByGroupMapCompleted;
        
        /// <remarks/>
        public event GetProductOptionCompletedEventHandler GetProductOptionCompleted;
        
        /// <remarks/>
        public event GetPostalCompletedEventHandler GetPostalCompleted;
        
        /// <remarks/>
        public event GetBookDetailByTicketSaleCompletedEventHandler GetBookDetailByTicketSaleCompleted;
        
        /// <remarks/>
        public event GetBookDetailByTicketRefundCompletedEventHandler GetBookDetailByTicketRefundCompleted;
        
        /// <remarks/>
        public event GetBookDetailByOptionSaleCompletedEventHandler GetBookDetailByOptionSaleCompleted;
        
        /// <remarks/>
        public event GetCustomerCMSCompletedEventHandler GetCustomerCMSCompleted;
        
        /// <remarks/>
        public event GetMemberLoginCompletedEventHandler GetMemberLoginCompleted;
        
        /// <remarks/>
        public event GetUnMemberLoginCompletedEventHandler GetUnMemberLoginCompleted;
        
        /// <remarks/>
        public event GetMemberLoginByGuestCompletedEventHandler GetMemberLoginByGuestCompleted;
        
        /// <remarks/>
        public event GetMemberDiscountDateCompletedEventHandler GetMemberDiscountDateCompleted;
        
        /// <remarks/>
        public event GetUnMemberCodeCompletedEventHandler GetUnMemberCodeCompleted;
        
        /// <remarks/>
        public event GetSystemDateTimeCompletedEventHandler GetSystemDateTimeCompleted;
        
        /// <remarks/>
        public event GetMemberKindCompletedEventHandler GetMemberKindCompleted;
        
        /// <remarks/>
        public event GetProductBySeatCompletedEventHandler GetProductBySeatCompleted;
        
        /// <remarks/>
        public event GetShopPaymentByWebCompletedEventHandler GetShopPaymentByWebCompleted;
        
        /// <remarks/>
        public event BookingCompletedEventHandler BookingCompleted;
        
        /// <remarks/>
        public event BookingByGroupCompletedEventHandler BookingByGroupCompleted;
        
        /// <remarks/>
        public event BookingByGroupNewCompletedEventHandler BookingByGroupNewCompleted;
        
        /// <remarks/>
        public event BookingByTimeCompletedEventHandler BookingByTimeCompleted;
        
        /// <remarks/>
        public event GetProductFilterListCompletedEventHandler GetProductFilterListCompleted;
        
        /// <remarks/>
        public event SaveBookByBankInformationCompletedEventHandler SaveBookByBankInformationCompleted;
        
        /// <remarks/>
        public event SaveMemberDiscountCompletedEventHandler SaveMemberDiscountCompleted;
        
        /// <remarks/>
        public event SaveMemberDiscountCancelCompletedEventHandler SaveMemberDiscountCancelCompleted;
        
        /// <remarks/>
        public event SaveBankInfomationOrCarNumberCompletedEventHandler SaveBankInfomationOrCarNumberCompleted;
        
        /// <remarks/>
        public event LodgingRefundByWebCompletedEventHandler LodgingRefundByWebCompleted;
        
        /// <remarks/>
        public event LodgingRefundByWeb2CompletedEventHandler LodgingRefundByWeb2Completed;
        
        /// <remarks/>
        public event RefundCompletedEventHandler RefundCompleted;
        
        /// <remarks/>
        public event Refund2CompletedEventHandler Refund2Completed;
        
        /// <remarks/>
        public event BookPaymentByGeneralCardCompletedEventHandler BookPaymentByGeneralCardCompleted;
        
        /// <remarks/>
        public event BookPaymentByISPCompletedEventHandler BookPaymentByISPCompleted;
        
        /// <remarks/>
        public event BookPaymentBy3DCompletedEventHandler BookPaymentBy3DCompleted;
        
        /// <remarks/>
        public event BookPaymentByRealAccountKFTCCompletedEventHandler BookPaymentByRealAccountKFTCCompleted;
        
        /// <remarks/>
        public event BookPaymentByRealAccountKFTCByAuthCompletedEventHandler BookPaymentByRealAccountKFTCByAuthCompleted;
        
        /// <remarks/>
        public event BookPaymentByVirtualCompletedEventHandler BookPaymentByVirtualCompleted;
        
        /// <remarks/>
        public event BookPaymentByMobileCompletedEventHandler BookPaymentByMobileCompleted;
        
        /// <remarks/>
        public event BookAfterApprovalCashSaveCompletedEventHandler BookAfterApprovalCashSaveCompleted;
        
        /// <remarks/>
        public event AuthenticationMobilePaymentCompletedEventHandler AuthenticationMobilePaymentCompleted;
        
        /// <remarks/>
        public event GetBookRefundedCompletedEventHandler GetBookRefundedCompleted;
        
        /// <remarks/>
        public event MobileCertificationCompletedEventHandler MobileCertificationCompleted;
        
        /// <remarks/>
        public event SaveMemberCertificationCompletedEventHandler SaveMemberCertificationCompleted;
        
        /// <remarks/>
        public event RealNameCertificationCompletedEventHandler RealNameCertificationCompleted;
        
        /// <remarks/>
        public event RealNameCertificationOtherCompletedEventHandler RealNameCertificationOtherCompleted;
        
        /// <remarks/>
        public event GetMemberIdCheckCompletedEventHandler GetMemberIdCheckCompleted;
        
        /// <remarks/>
        public event MemberJoinCompletedEventHandler MemberJoinCompleted;
        
        /// <remarks/>
        public event MemberJoinByIPinCompletedEventHandler MemberJoinByIPinCompleted;
        
        /// <remarks/>
        public event GetMemberExistsByMobileNoCompletedEventHandler GetMemberExistsByMobileNoCompleted;
        
        /// <remarks/>
        public event GetMemberExistsCompletedEventHandler GetMemberExistsCompleted;
        
        /// <remarks/>
        public event GetMemberIdByMobileNoCompletedEventHandler GetMemberIdByMobileNoCompleted;
        
        /// <remarks/>
        public event GetMemberPasswordCompletedEventHandler GetMemberPasswordCompleted;
        
        /// <remarks/>
        public event SendMemberPwCompletedEventHandler SendMemberPwCompleted;
        
        /// <remarks/>
        public event GetCardSequenceNoCompletedEventHandler GetCardSequenceNoCompleted;
        
        /// <remarks/>
        public event SaveMemberByWithdrawCompletedEventHandler SaveMemberByWithdrawCompleted;
        
        /// <remarks/>
        public event SaveMemberByEditCompletedEventHandler SaveMemberByEditCompleted;
        
        /// <remarks/>
        public event GetMemberCompletedEventHandler GetMemberCompleted;
        
        /// <remarks/>
        public event GetDrawEndDateCompletedEventHandler GetDrawEndDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductGroupByBook", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetProductGroupByBook(string companyCode, string shopCode) {
            object[] results = this.Invoke("GetProductGroupByBook", new object[] {
                        companyCode,
                        shopCode});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductGroupByBookAsync(string companyCode, string shopCode) {
            this.GetProductGroupByBookAsync(companyCode, shopCode, null);
        }
        
        /// <remarks/>
        public void GetProductGroupByBookAsync(string companyCode, string shopCode, object userState) {
            if ((this.GetProductGroupByBookOperationCompleted == null)) {
                this.GetProductGroupByBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductGroupByBookOperationCompleted);
            }
            this.InvokeAsync("GetProductGroupByBook", new object[] {
                        companyCode,
                        shopCode}, this.GetProductGroupByBookOperationCompleted, userState);
        }
        
        private void OnGetProductGroupByBookOperationCompleted(object arg) {
            if ((this.GetProductGroupByBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductGroupByBookCompleted(this, new GetProductGroupByBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductByBook", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetProductByBook(string companyCode, string shopCode) {
            object[] results = this.Invoke("GetProductByBook", new object[] {
                        companyCode,
                        shopCode});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductByBookAsync(string companyCode, string shopCode) {
            this.GetProductByBookAsync(companyCode, shopCode, null);
        }
        
        /// <remarks/>
        public void GetProductByBookAsync(string companyCode, string shopCode, object userState) {
            if ((this.GetProductByBookOperationCompleted == null)) {
                this.GetProductByBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductByBookOperationCompleted);
            }
            this.InvokeAsync("GetProductByBook", new object[] {
                        companyCode,
                        shopCode}, this.GetProductByBookOperationCompleted, userState);
        }
        
        private void OnGetProductByBookOperationCompleted(object arg) {
            if ((this.GetProductByBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductByBookCompleted(this, new GetProductByBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductByTimeTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetProductByTimeTable(string companyCode, string shopCode, string groupCode, string playDate, string groupKind) {
            object[] results = this.Invoke("GetProductByTimeTable", new object[] {
                        companyCode,
                        shopCode,
                        groupCode,
                        playDate,
                        groupKind});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductByTimeTableAsync(string companyCode, string shopCode, string groupCode, string playDate, string groupKind) {
            this.GetProductByTimeTableAsync(companyCode, shopCode, groupCode, playDate, groupKind, null);
        }
        
        /// <remarks/>
        public void GetProductByTimeTableAsync(string companyCode, string shopCode, string groupCode, string playDate, string groupKind, object userState) {
            if ((this.GetProductByTimeTableOperationCompleted == null)) {
                this.GetProductByTimeTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductByTimeTableOperationCompleted);
            }
            this.InvokeAsync("GetProductByTimeTable", new object[] {
                        companyCode,
                        shopCode,
                        groupCode,
                        playDate,
                        groupKind}, this.GetProductByTimeTableOperationCompleted, userState);
        }
        
        private void OnGetProductByTimeTableOperationCompleted(object arg) {
            if ((this.GetProductByTimeTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductByTimeTableCompleted(this, new GetProductByTimeTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetProductImage(string companyCode, string shopCode) {
            object[] results = this.Invoke("GetProductImage", new object[] {
                        companyCode,
                        shopCode});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductImageAsync(string companyCode, string shopCode) {
            this.GetProductImageAsync(companyCode, shopCode, null);
        }
        
        /// <remarks/>
        public void GetProductImageAsync(string companyCode, string shopCode, object userState) {
            if ((this.GetProductImageOperationCompleted == null)) {
                this.GetProductImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductImageOperationCompleted);
            }
            this.InvokeAsync("GetProductImage", new object[] {
                        companyCode,
                        shopCode}, this.GetProductImageOperationCompleted, userState);
        }
        
        private void OnGetProductImageOperationCompleted(object arg) {
            if ((this.GetProductImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductImageCompleted(this, new GetProductImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScheduleByBook", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetScheduleByBook(string companyCode, string shopCode, string productCode) {
            object[] results = this.Invoke("GetScheduleByBook", new object[] {
                        companyCode,
                        shopCode,
                        productCode});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleByBookAsync(string companyCode, string shopCode, string productCode) {
            this.GetScheduleByBookAsync(companyCode, shopCode, productCode, null);
        }
        
        /// <remarks/>
        public void GetScheduleByBookAsync(string companyCode, string shopCode, string productCode, object userState) {
            if ((this.GetScheduleByBookOperationCompleted == null)) {
                this.GetScheduleByBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleByBookOperationCompleted);
            }
            this.InvokeAsync("GetScheduleByBook", new object[] {
                        companyCode,
                        shopCode,
                        productCode}, this.GetScheduleByBookOperationCompleted, userState);
        }
        
        private void OnGetScheduleByBookOperationCompleted(object arg) {
            if ((this.GetScheduleByBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleByBookCompleted(this, new GetScheduleByBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScheduleByTimeTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetScheduleByTimeTable(string companyCode, string shopCode, string productCode, string playDate) {
            object[] results = this.Invoke("GetScheduleByTimeTable", new object[] {
                        companyCode,
                        shopCode,
                        productCode,
                        playDate});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleByTimeTableAsync(string companyCode, string shopCode, string productCode, string playDate) {
            this.GetScheduleByTimeTableAsync(companyCode, shopCode, productCode, playDate, null);
        }
        
        /// <remarks/>
        public void GetScheduleByTimeTableAsync(string companyCode, string shopCode, string productCode, string playDate, object userState) {
            if ((this.GetScheduleByTimeTableOperationCompleted == null)) {
                this.GetScheduleByTimeTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleByTimeTableOperationCompleted);
            }
            this.InvokeAsync("GetScheduleByTimeTable", new object[] {
                        companyCode,
                        shopCode,
                        productCode,
                        playDate}, this.GetScheduleByTimeTableOperationCompleted, userState);
        }
        
        private void OnGetScheduleByTimeTableOperationCompleted(object arg) {
            if ((this.GetScheduleByTimeTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleByTimeTableCompleted(this, new GetScheduleByTimeTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScheduleByGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetScheduleByGroup(string companyCode, string shopCode, string yearMonth) {
            object[] results = this.Invoke("GetScheduleByGroup", new object[] {
                        companyCode,
                        shopCode,
                        yearMonth});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleByGroupAsync(string companyCode, string shopCode, string yearMonth) {
            this.GetScheduleByGroupAsync(companyCode, shopCode, yearMonth, null);
        }
        
        /// <remarks/>
        public void GetScheduleByGroupAsync(string companyCode, string shopCode, string yearMonth, object userState) {
            if ((this.GetScheduleByGroupOperationCompleted == null)) {
                this.GetScheduleByGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleByGroupOperationCompleted);
            }
            this.InvokeAsync("GetScheduleByGroup", new object[] {
                        companyCode,
                        shopCode,
                        yearMonth}, this.GetScheduleByGroupOperationCompleted, userState);
        }
        
        private void OnGetScheduleByGroupOperationCompleted(object arg) {
            if ((this.GetScheduleByGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleByGroupCompleted(this, new GetScheduleByGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCommonByGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetCommonByGroup(string groupCode1) {
            object[] results = this.Invoke("GetCommonByGroup", new object[] {
                        groupCode1});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCommonByGroupAsync(string groupCode1) {
            this.GetCommonByGroupAsync(groupCode1, null);
        }
        
        /// <remarks/>
        public void GetCommonByGroupAsync(string groupCode1, object userState) {
            if ((this.GetCommonByGroupOperationCompleted == null)) {
                this.GetCommonByGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommonByGroupOperationCompleted);
            }
            this.InvokeAsync("GetCommonByGroup", new object[] {
                        groupCode1}, this.GetCommonByGroupOperationCompleted, userState);
        }
        
        private void OnGetCommonByGroupOperationCompleted(object arg) {
            if ((this.GetCommonByGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommonByGroupCompleted(this, new GetCommonByGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyPage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetMyPage(string companyCode, string shopCode, string memberCode, string MemberId) {
            object[] results = this.Invoke("GetMyPage", new object[] {
                        companyCode,
                        shopCode,
                        memberCode,
                        MemberId});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMyPageAsync(string companyCode, string shopCode, string memberCode, string MemberId) {
            this.GetMyPageAsync(companyCode, shopCode, memberCode, MemberId, null);
        }
        
        /// <remarks/>
        public void GetMyPageAsync(string companyCode, string shopCode, string memberCode, string MemberId, object userState) {
            if ((this.GetMyPageOperationCompleted == null)) {
                this.GetMyPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyPageOperationCompleted);
            }
            this.InvokeAsync("GetMyPage", new object[] {
                        companyCode,
                        shopCode,
                        memberCode,
                        MemberId}, this.GetMyPageOperationCompleted, userState);
        }
        
        private void OnGetMyPageOperationCompleted(object arg) {
            if ((this.GetMyPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyPageCompleted(this, new GetMyPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalBongGetMyPage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] CalBongGetMyPage(string companyCode, string shopCode, string memberCode, string MemberId) {
            object[] results = this.Invoke("CalBongGetMyPage", new object[] {
                        companyCode,
                        shopCode,
                        memberCode,
                        MemberId});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void CalBongGetMyPageAsync(string companyCode, string shopCode, string memberCode, string MemberId) {
            this.CalBongGetMyPageAsync(companyCode, shopCode, memberCode, MemberId, null);
        }
        
        /// <remarks/>
        public void CalBongGetMyPageAsync(string companyCode, string shopCode, string memberCode, string MemberId, object userState) {
            if ((this.CalBongGetMyPageOperationCompleted == null)) {
                this.CalBongGetMyPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalBongGetMyPageOperationCompleted);
            }
            this.InvokeAsync("CalBongGetMyPage", new object[] {
                        companyCode,
                        shopCode,
                        memberCode,
                        MemberId}, this.CalBongGetMyPageOperationCompleted, userState);
        }
        
        private void OnCalBongGetMyPageOperationCompleted(object arg) {
            if ((this.CalBongGetMyPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalBongGetMyPageCompleted(this, new CalBongGetMyPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBaseData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetBaseData(string companyCode, string shopCode) {
            object[] results = this.Invoke("GetBaseData", new object[] {
                        companyCode,
                        shopCode});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBaseDataAsync(string companyCode, string shopCode) {
            this.GetBaseDataAsync(companyCode, shopCode, null);
        }
        
        /// <remarks/>
        public void GetBaseDataAsync(string companyCode, string shopCode, object userState) {
            if ((this.GetBaseDataOperationCompleted == null)) {
                this.GetBaseDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBaseDataOperationCompleted);
            }
            this.InvokeAsync("GetBaseData", new object[] {
                        companyCode,
                        shopCode}, this.GetBaseDataOperationCompleted, userState);
        }
        
        private void OnGetBaseDataOperationCompleted(object arg) {
            if ((this.GetBaseDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBaseDataCompleted(this, new GetBaseDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBoardSchedule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetBoardSchedule(string companyCode, string shopCode, string yearMonth) {
            object[] results = this.Invoke("GetBoardSchedule", new object[] {
                        companyCode,
                        shopCode,
                        yearMonth});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBoardScheduleAsync(string companyCode, string shopCode, string yearMonth) {
            this.GetBoardScheduleAsync(companyCode, shopCode, yearMonth, null);
        }
        
        /// <remarks/>
        public void GetBoardScheduleAsync(string companyCode, string shopCode, string yearMonth, object userState) {
            if ((this.GetBoardScheduleOperationCompleted == null)) {
                this.GetBoardScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoardScheduleOperationCompleted);
            }
            this.InvokeAsync("GetBoardSchedule", new object[] {
                        companyCode,
                        shopCode,
                        yearMonth}, this.GetBoardScheduleOperationCompleted, userState);
        }
        
        private void OnGetBoardScheduleOperationCompleted(object arg) {
            if ((this.GetBoardScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoardScheduleCompleted(this, new GetBoardScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductMap", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetProductMap(string companyCode, string shopCode) {
            object[] results = this.Invoke("GetProductMap", new object[] {
                        companyCode,
                        shopCode});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductMapAsync(string companyCode, string shopCode) {
            this.GetProductMapAsync(companyCode, shopCode, null);
        }
        
        /// <remarks/>
        public void GetProductMapAsync(string companyCode, string shopCode, object userState) {
            if ((this.GetProductMapOperationCompleted == null)) {
                this.GetProductMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductMapOperationCompleted);
            }
            this.InvokeAsync("GetProductMap", new object[] {
                        companyCode,
                        shopCode}, this.GetProductMapOperationCompleted, userState);
        }
        
        private void OnGetProductMapOperationCompleted(object arg) {
            if ((this.GetProductMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductMapCompleted(this, new GetProductMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScheduleByGroupMap", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetScheduleByGroupMap(string companyCode, string shopCode, string groupCode, string startDate, string endDate) {
            object[] results = this.Invoke("GetScheduleByGroupMap", new object[] {
                        companyCode,
                        shopCode,
                        groupCode,
                        startDate,
                        endDate});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleByGroupMapAsync(string companyCode, string shopCode, string groupCode, string startDate, string endDate) {
            this.GetScheduleByGroupMapAsync(companyCode, shopCode, groupCode, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetScheduleByGroupMapAsync(string companyCode, string shopCode, string groupCode, string startDate, string endDate, object userState) {
            if ((this.GetScheduleByGroupMapOperationCompleted == null)) {
                this.GetScheduleByGroupMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleByGroupMapOperationCompleted);
            }
            this.InvokeAsync("GetScheduleByGroupMap", new object[] {
                        companyCode,
                        shopCode,
                        groupCode,
                        startDate,
                        endDate}, this.GetScheduleByGroupMapOperationCompleted, userState);
        }
        
        private void OnGetScheduleByGroupMapOperationCompleted(object arg) {
            if ((this.GetScheduleByGroupMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleByGroupMapCompleted(this, new GetScheduleByGroupMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductOption", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetProductOption(string CompanyCode, string ShopCode, string GroupCode, string ProductCode) {
            object[] results = this.Invoke("GetProductOption", new object[] {
                        CompanyCode,
                        ShopCode,
                        GroupCode,
                        ProductCode});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductOptionAsync(string CompanyCode, string ShopCode, string GroupCode, string ProductCode) {
            this.GetProductOptionAsync(CompanyCode, ShopCode, GroupCode, ProductCode, null);
        }
        
        /// <remarks/>
        public void GetProductOptionAsync(string CompanyCode, string ShopCode, string GroupCode, string ProductCode, object userState) {
            if ((this.GetProductOptionOperationCompleted == null)) {
                this.GetProductOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductOptionOperationCompleted);
            }
            this.InvokeAsync("GetProductOption", new object[] {
                        CompanyCode,
                        ShopCode,
                        GroupCode,
                        ProductCode}, this.GetProductOptionOperationCompleted, userState);
        }
        
        private void OnGetProductOptionOperationCompleted(object arg) {
            if ((this.GetProductOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductOptionCompleted(this, new GetProductOptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPostal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetPostal(string addressName) {
            object[] results = this.Invoke("GetPostal", new object[] {
                        addressName});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPostalAsync(string addressName) {
            this.GetPostalAsync(addressName, null);
        }
        
        /// <remarks/>
        public void GetPostalAsync(string addressName, object userState) {
            if ((this.GetPostalOperationCompleted == null)) {
                this.GetPostalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostalOperationCompleted);
            }
            this.InvokeAsync("GetPostal", new object[] {
                        addressName}, this.GetPostalOperationCompleted, userState);
        }
        
        private void OnGetPostalOperationCompleted(object arg) {
            if ((this.GetPostalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostalCompleted(this, new GetPostalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBookDetailByTicketSale", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetBookDetailByTicketSale(string companyCode, string shopCode, string bookNo) {
            object[] results = this.Invoke("GetBookDetailByTicketSale", new object[] {
                        companyCode,
                        shopCode,
                        bookNo});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBookDetailByTicketSaleAsync(string companyCode, string shopCode, string bookNo) {
            this.GetBookDetailByTicketSaleAsync(companyCode, shopCode, bookNo, null);
        }
        
        /// <remarks/>
        public void GetBookDetailByTicketSaleAsync(string companyCode, string shopCode, string bookNo, object userState) {
            if ((this.GetBookDetailByTicketSaleOperationCompleted == null)) {
                this.GetBookDetailByTicketSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBookDetailByTicketSaleOperationCompleted);
            }
            this.InvokeAsync("GetBookDetailByTicketSale", new object[] {
                        companyCode,
                        shopCode,
                        bookNo}, this.GetBookDetailByTicketSaleOperationCompleted, userState);
        }
        
        private void OnGetBookDetailByTicketSaleOperationCompleted(object arg) {
            if ((this.GetBookDetailByTicketSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBookDetailByTicketSaleCompleted(this, new GetBookDetailByTicketSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBookDetailByTicketRefund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetBookDetailByTicketRefund(string companyCode, string shopCode, string bookNo) {
            object[] results = this.Invoke("GetBookDetailByTicketRefund", new object[] {
                        companyCode,
                        shopCode,
                        bookNo});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBookDetailByTicketRefundAsync(string companyCode, string shopCode, string bookNo) {
            this.GetBookDetailByTicketRefundAsync(companyCode, shopCode, bookNo, null);
        }
        
        /// <remarks/>
        public void GetBookDetailByTicketRefundAsync(string companyCode, string shopCode, string bookNo, object userState) {
            if ((this.GetBookDetailByTicketRefundOperationCompleted == null)) {
                this.GetBookDetailByTicketRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBookDetailByTicketRefundOperationCompleted);
            }
            this.InvokeAsync("GetBookDetailByTicketRefund", new object[] {
                        companyCode,
                        shopCode,
                        bookNo}, this.GetBookDetailByTicketRefundOperationCompleted, userState);
        }
        
        private void OnGetBookDetailByTicketRefundOperationCompleted(object arg) {
            if ((this.GetBookDetailByTicketRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBookDetailByTicketRefundCompleted(this, new GetBookDetailByTicketRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBookDetailByOptionSale", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetBookDetailByOptionSale(string companyCode, string shopCode, string bookNo) {
            object[] results = this.Invoke("GetBookDetailByOptionSale", new object[] {
                        companyCode,
                        shopCode,
                        bookNo});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBookDetailByOptionSaleAsync(string companyCode, string shopCode, string bookNo) {
            this.GetBookDetailByOptionSaleAsync(companyCode, shopCode, bookNo, null);
        }
        
        /// <remarks/>
        public void GetBookDetailByOptionSaleAsync(string companyCode, string shopCode, string bookNo, object userState) {
            if ((this.GetBookDetailByOptionSaleOperationCompleted == null)) {
                this.GetBookDetailByOptionSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBookDetailByOptionSaleOperationCompleted);
            }
            this.InvokeAsync("GetBookDetailByOptionSale", new object[] {
                        companyCode,
                        shopCode,
                        bookNo}, this.GetBookDetailByOptionSaleOperationCompleted, userState);
        }
        
        private void OnGetBookDetailByOptionSaleOperationCompleted(object arg) {
            if ((this.GetBookDetailByOptionSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBookDetailByOptionSaleCompleted(this, new GetBookDetailByOptionSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerCMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetCustomerCMS(string companyCode, string shopCode, string bookNo) {
            object[] results = this.Invoke("GetCustomerCMS", new object[] {
                        companyCode,
                        shopCode,
                        bookNo});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerCMSAsync(string companyCode, string shopCode, string bookNo) {
            this.GetCustomerCMSAsync(companyCode, shopCode, bookNo, null);
        }
        
        /// <remarks/>
        public void GetCustomerCMSAsync(string companyCode, string shopCode, string bookNo, object userState) {
            if ((this.GetCustomerCMSOperationCompleted == null)) {
                this.GetCustomerCMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerCMSOperationCompleted);
            }
            this.InvokeAsync("GetCustomerCMS", new object[] {
                        companyCode,
                        shopCode,
                        bookNo}, this.GetCustomerCMSOperationCompleted, userState);
        }
        
        private void OnGetCustomerCMSOperationCompleted(object arg) {
            if ((this.GetCustomerCMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerCMSCompleted(this, new GetCustomerCMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetMemberLogin(string companyCode, string loginId, string LoginPassword) {
            object[] results = this.Invoke("GetMemberLogin", new object[] {
                        companyCode,
                        loginId,
                        LoginPassword});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberLoginAsync(string companyCode, string loginId, string LoginPassword) {
            this.GetMemberLoginAsync(companyCode, loginId, LoginPassword, null);
        }
        
        /// <remarks/>
        public void GetMemberLoginAsync(string companyCode, string loginId, string LoginPassword, object userState) {
            if ((this.GetMemberLoginOperationCompleted == null)) {
                this.GetMemberLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberLoginOperationCompleted);
            }
            this.InvokeAsync("GetMemberLogin", new object[] {
                        companyCode,
                        loginId,
                        LoginPassword}, this.GetMemberLoginOperationCompleted, userState);
        }
        
        private void OnGetMemberLoginOperationCompleted(object arg) {
            if ((this.GetMemberLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberLoginCompleted(this, new GetMemberLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnMemberLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetUnMemberLogin(string companyCode, string memberName, string memberSSN, string memberEmail, string memberMobileNo, string workId) {
            object[] results = this.Invoke("GetUnMemberLogin", new object[] {
                        companyCode,
                        memberName,
                        memberSSN,
                        memberEmail,
                        memberMobileNo,
                        workId});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUnMemberLoginAsync(string companyCode, string memberName, string memberSSN, string memberEmail, string memberMobileNo, string workId) {
            this.GetUnMemberLoginAsync(companyCode, memberName, memberSSN, memberEmail, memberMobileNo, workId, null);
        }
        
        /// <remarks/>
        public void GetUnMemberLoginAsync(string companyCode, string memberName, string memberSSN, string memberEmail, string memberMobileNo, string workId, object userState) {
            if ((this.GetUnMemberLoginOperationCompleted == null)) {
                this.GetUnMemberLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnMemberLoginOperationCompleted);
            }
            this.InvokeAsync("GetUnMemberLogin", new object[] {
                        companyCode,
                        memberName,
                        memberSSN,
                        memberEmail,
                        memberMobileNo,
                        workId}, this.GetUnMemberLoginOperationCompleted, userState);
        }
        
        private void OnGetUnMemberLoginOperationCompleted(object arg) {
            if ((this.GetUnMemberLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnMemberLoginCompleted(this, new GetUnMemberLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberLoginByGuest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemberLoginByGuest(string CompanyCode, string LoginId, string MemberName, string MemberSsn, string MemberEmail, string MobileNo, string TelephoneNo, string PostalCode, string Address1, string Address2, string EmailSendYn, string SmsSendYn, string UpdateId) {
            object[] results = this.Invoke("GetMemberLoginByGuest", new object[] {
                        CompanyCode,
                        LoginId,
                        MemberName,
                        MemberSsn,
                        MemberEmail,
                        MobileNo,
                        TelephoneNo,
                        PostalCode,
                        Address1,
                        Address2,
                        EmailSendYn,
                        SmsSendYn,
                        UpdateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberLoginByGuestAsync(string CompanyCode, string LoginId, string MemberName, string MemberSsn, string MemberEmail, string MobileNo, string TelephoneNo, string PostalCode, string Address1, string Address2, string EmailSendYn, string SmsSendYn, string UpdateId) {
            this.GetMemberLoginByGuestAsync(CompanyCode, LoginId, MemberName, MemberSsn, MemberEmail, MobileNo, TelephoneNo, PostalCode, Address1, Address2, EmailSendYn, SmsSendYn, UpdateId, null);
        }
        
        /// <remarks/>
        public void GetMemberLoginByGuestAsync(string CompanyCode, string LoginId, string MemberName, string MemberSsn, string MemberEmail, string MobileNo, string TelephoneNo, string PostalCode, string Address1, string Address2, string EmailSendYn, string SmsSendYn, string UpdateId, object userState) {
            if ((this.GetMemberLoginByGuestOperationCompleted == null)) {
                this.GetMemberLoginByGuestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberLoginByGuestOperationCompleted);
            }
            this.InvokeAsync("GetMemberLoginByGuest", new object[] {
                        CompanyCode,
                        LoginId,
                        MemberName,
                        MemberSsn,
                        MemberEmail,
                        MobileNo,
                        TelephoneNo,
                        PostalCode,
                        Address1,
                        Address2,
                        EmailSendYn,
                        SmsSendYn,
                        UpdateId}, this.GetMemberLoginByGuestOperationCompleted, userState);
        }
        
        private void OnGetMemberLoginByGuestOperationCompleted(object arg) {
            if ((this.GetMemberLoginByGuestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberLoginByGuestCompleted(this, new GetMemberLoginByGuestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberDiscountDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemberDiscountDate(string companyCode, string shopCode, string memberCode) {
            object[] results = this.Invoke("GetMemberDiscountDate", new object[] {
                        companyCode,
                        shopCode,
                        memberCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberDiscountDateAsync(string companyCode, string shopCode, string memberCode) {
            this.GetMemberDiscountDateAsync(companyCode, shopCode, memberCode, null);
        }
        
        /// <remarks/>
        public void GetMemberDiscountDateAsync(string companyCode, string shopCode, string memberCode, object userState) {
            if ((this.GetMemberDiscountDateOperationCompleted == null)) {
                this.GetMemberDiscountDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberDiscountDateOperationCompleted);
            }
            this.InvokeAsync("GetMemberDiscountDate", new object[] {
                        companyCode,
                        shopCode,
                        memberCode}, this.GetMemberDiscountDateOperationCompleted, userState);
        }
        
        private void OnGetMemberDiscountDateOperationCompleted(object arg) {
            if ((this.GetMemberDiscountDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberDiscountDateCompleted(this, new GetMemberDiscountDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnMemberCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUnMemberCode(string companyCode, string memberName, string memberSSN) {
            object[] results = this.Invoke("GetUnMemberCode", new object[] {
                        companyCode,
                        memberName,
                        memberSSN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnMemberCodeAsync(string companyCode, string memberName, string memberSSN) {
            this.GetUnMemberCodeAsync(companyCode, memberName, memberSSN, null);
        }
        
        /// <remarks/>
        public void GetUnMemberCodeAsync(string companyCode, string memberName, string memberSSN, object userState) {
            if ((this.GetUnMemberCodeOperationCompleted == null)) {
                this.GetUnMemberCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnMemberCodeOperationCompleted);
            }
            this.InvokeAsync("GetUnMemberCode", new object[] {
                        companyCode,
                        memberName,
                        memberSSN}, this.GetUnMemberCodeOperationCompleted, userState);
        }
        
        private void OnGetUnMemberCodeOperationCompleted(object arg) {
            if ((this.GetUnMemberCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnMemberCodeCompleted(this, new GetUnMemberCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSystemDateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSystemDateTime() {
            object[] results = this.Invoke("GetSystemDateTime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemDateTimeAsync() {
            this.GetSystemDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetSystemDateTimeAsync(object userState) {
            if ((this.GetSystemDateTimeOperationCompleted == null)) {
                this.GetSystemDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemDateTimeOperationCompleted);
            }
            this.InvokeAsync("GetSystemDateTime", new object[0], this.GetSystemDateTimeOperationCompleted, userState);
        }
        
        private void OnGetSystemDateTimeOperationCompleted(object arg) {
            if ((this.GetSystemDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemDateTimeCompleted(this, new GetSystemDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberKind", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetMemberKind(string companyCode, string useYn) {
            object[] results = this.Invoke("GetMemberKind", new object[] {
                        companyCode,
                        useYn});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberKindAsync(string companyCode, string useYn) {
            this.GetMemberKindAsync(companyCode, useYn, null);
        }
        
        /// <remarks/>
        public void GetMemberKindAsync(string companyCode, string useYn, object userState) {
            if ((this.GetMemberKindOperationCompleted == null)) {
                this.GetMemberKindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberKindOperationCompleted);
            }
            this.InvokeAsync("GetMemberKind", new object[] {
                        companyCode,
                        useYn}, this.GetMemberKindOperationCompleted, userState);
        }
        
        private void OnGetMemberKindOperationCompleted(object arg) {
            if ((this.GetMemberKindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberKindCompleted(this, new GetMemberKindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductBySeat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetProductBySeat(string companyCode, string shopCode, string groupCode, string playDate) {
            object[] results = this.Invoke("GetProductBySeat", new object[] {
                        companyCode,
                        shopCode,
                        groupCode,
                        playDate});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductBySeatAsync(string companyCode, string shopCode, string groupCode, string playDate) {
            this.GetProductBySeatAsync(companyCode, shopCode, groupCode, playDate, null);
        }
        
        /// <remarks/>
        public void GetProductBySeatAsync(string companyCode, string shopCode, string groupCode, string playDate, object userState) {
            if ((this.GetProductBySeatOperationCompleted == null)) {
                this.GetProductBySeatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductBySeatOperationCompleted);
            }
            this.InvokeAsync("GetProductBySeat", new object[] {
                        companyCode,
                        shopCode,
                        groupCode,
                        playDate}, this.GetProductBySeatOperationCompleted, userState);
        }
        
        private void OnGetProductBySeatOperationCompleted(object arg) {
            if ((this.GetProductBySeatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductBySeatCompleted(this, new GetProductBySeatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetShopPaymentByWeb", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetShopPaymentByWeb(string companyCode, string shopCode) {
            object[] results = this.Invoke("GetShopPaymentByWeb", new object[] {
                        companyCode,
                        shopCode});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetShopPaymentByWebAsync(string companyCode, string shopCode) {
            this.GetShopPaymentByWebAsync(companyCode, shopCode, null);
        }
        
        /// <remarks/>
        public void GetShopPaymentByWebAsync(string companyCode, string shopCode, object userState) {
            if ((this.GetShopPaymentByWebOperationCompleted == null)) {
                this.GetShopPaymentByWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShopPaymentByWebOperationCompleted);
            }
            this.InvokeAsync("GetShopPaymentByWeb", new object[] {
                        companyCode,
                        shopCode}, this.GetShopPaymentByWebOperationCompleted, userState);
        }
        
        private void OnGetShopPaymentByWebOperationCompleted(object arg) {
            if ((this.GetShopPaymentByWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShopPaymentByWebCompleted(this, new GetShopPaymentByWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Booking", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Booking(
                    string companyCode, 
                    string shopCode, 
                    string customerName, 
                    string customerSSN, 
                    string customerTelephoneNo, 
                    string customerMobileNo, 
                    string customerEMail, 
                    string bankCode, 
                    string bankAccount, 
                    string bankDepositor, 
                    string depositorSSN, 
                    int paymentLimitHour, 
                    string terminalCode, 
                    string userId, 
                    string memberYn, 
                    string memberCode, 
                    string saleKindCode, 
                    string productCode, 
                    string startDate, 
                    string productFee, 
                    string discountYn, 
                    string premiumYn, 
                    string accountKind) {
            object[] results = this.Invoke("Booking", new object[] {
                        companyCode,
                        shopCode,
                        customerName,
                        customerSSN,
                        customerTelephoneNo,
                        customerMobileNo,
                        customerEMail,
                        bankCode,
                        bankAccount,
                        bankDepositor,
                        depositorSSN,
                        paymentLimitHour,
                        terminalCode,
                        userId,
                        memberYn,
                        memberCode,
                        saleKindCode,
                        productCode,
                        startDate,
                        productFee,
                        discountYn,
                        premiumYn,
                        accountKind});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BookingAsync(
                    string companyCode, 
                    string shopCode, 
                    string customerName, 
                    string customerSSN, 
                    string customerTelephoneNo, 
                    string customerMobileNo, 
                    string customerEMail, 
                    string bankCode, 
                    string bankAccount, 
                    string bankDepositor, 
                    string depositorSSN, 
                    int paymentLimitHour, 
                    string terminalCode, 
                    string userId, 
                    string memberYn, 
                    string memberCode, 
                    string saleKindCode, 
                    string productCode, 
                    string startDate, 
                    string productFee, 
                    string discountYn, 
                    string premiumYn, 
                    string accountKind) {
            this.BookingAsync(companyCode, shopCode, customerName, customerSSN, customerTelephoneNo, customerMobileNo, customerEMail, bankCode, bankAccount, bankDepositor, depositorSSN, paymentLimitHour, terminalCode, userId, memberYn, memberCode, saleKindCode, productCode, startDate, productFee, discountYn, premiumYn, accountKind, null);
        }
        
        /// <remarks/>
        public void BookingAsync(
                    string companyCode, 
                    string shopCode, 
                    string customerName, 
                    string customerSSN, 
                    string customerTelephoneNo, 
                    string customerMobileNo, 
                    string customerEMail, 
                    string bankCode, 
                    string bankAccount, 
                    string bankDepositor, 
                    string depositorSSN, 
                    int paymentLimitHour, 
                    string terminalCode, 
                    string userId, 
                    string memberYn, 
                    string memberCode, 
                    string saleKindCode, 
                    string productCode, 
                    string startDate, 
                    string productFee, 
                    string discountYn, 
                    string premiumYn, 
                    string accountKind, 
                    object userState) {
            if ((this.BookingOperationCompleted == null)) {
                this.BookingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookingOperationCompleted);
            }
            this.InvokeAsync("Booking", new object[] {
                        companyCode,
                        shopCode,
                        customerName,
                        customerSSN,
                        customerTelephoneNo,
                        customerMobileNo,
                        customerEMail,
                        bankCode,
                        bankAccount,
                        bankDepositor,
                        depositorSSN,
                        paymentLimitHour,
                        terminalCode,
                        userId,
                        memberYn,
                        memberCode,
                        saleKindCode,
                        productCode,
                        startDate,
                        productFee,
                        discountYn,
                        premiumYn,
                        accountKind}, this.BookingOperationCompleted, userState);
        }
        
        private void OnBookingOperationCompleted(object arg) {
            if ((this.BookingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookingCompleted(this, new BookingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BookingByGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BookingByGroup(
                    string companyCode, 
                    string shopCode, 
                    string customerName, 
                    string customerSSN, 
                    string customerTelephoneNo, 
                    string customerMobileNo, 
                    string customerEMail, 
                    int paymentLimitHour, 
                    string terminalCode, 
                    string userId, 
                    string memberYn, 
                    string memberCode, 
                    string memberKindCode, 
                    string discountValue, 
                    string saleKindCode, 
                    string productCode, 
                    string startDate, 
                    string endDate, 
                    string optionYn, 
                    int cancelLimitDays, 
                    int cancelLimitHour, 
                    int nearLimitDays, 
                    int nearPaymentLimitHour, 
                    string accountKind) {
            object[] results = this.Invoke("BookingByGroup", new object[] {
                        companyCode,
                        shopCode,
                        customerName,
                        customerSSN,
                        customerTelephoneNo,
                        customerMobileNo,
                        customerEMail,
                        paymentLimitHour,
                        terminalCode,
                        userId,
                        memberYn,
                        memberCode,
                        memberKindCode,
                        discountValue,
                        saleKindCode,
                        productCode,
                        startDate,
                        endDate,
                        optionYn,
                        cancelLimitDays,
                        cancelLimitHour,
                        nearLimitDays,
                        nearPaymentLimitHour,
                        accountKind});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BookingByGroupAsync(
                    string companyCode, 
                    string shopCode, 
                    string customerName, 
                    string customerSSN, 
                    string customerTelephoneNo, 
                    string customerMobileNo, 
                    string customerEMail, 
                    int paymentLimitHour, 
                    string terminalCode, 
                    string userId, 
                    string memberYn, 
                    string memberCode, 
                    string memberKindCode, 
                    string discountValue, 
                    string saleKindCode, 
                    string productCode, 
                    string startDate, 
                    string endDate, 
                    string optionYn, 
                    int cancelLimitDays, 
                    int cancelLimitHour, 
                    int nearLimitDays, 
                    int nearPaymentLimitHour, 
                    string accountKind) {
            this.BookingByGroupAsync(companyCode, shopCode, customerName, customerSSN, customerTelephoneNo, customerMobileNo, customerEMail, paymentLimitHour, terminalCode, userId, memberYn, memberCode, memberKindCode, discountValue, saleKindCode, productCode, startDate, endDate, optionYn, cancelLimitDays, cancelLimitHour, nearLimitDays, nearPaymentLimitHour, accountKind, null);
        }
        
        /// <remarks/>
        public void BookingByGroupAsync(
                    string companyCode, 
                    string shopCode, 
                    string customerName, 
                    string customerSSN, 
                    string customerTelephoneNo, 
                    string customerMobileNo, 
                    string customerEMail, 
                    int paymentLimitHour, 
                    string terminalCode, 
                    string userId, 
                    string memberYn, 
                    string memberCode, 
                    string memberKindCode, 
                    string discountValue, 
                    string saleKindCode, 
                    string productCode, 
                    string startDate, 
                    string endDate, 
                    string optionYn, 
                    int cancelLimitDays, 
                    int cancelLimitHour, 
                    int nearLimitDays, 
                    int nearPaymentLimitHour, 
                    string accountKind, 
                    object userState) {
            if ((this.BookingByGroupOperationCompleted == null)) {
                this.BookingByGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookingByGroupOperationCompleted);
            }
            this.InvokeAsync("BookingByGroup", new object[] {
                        companyCode,
                        shopCode,
                        customerName,
                        customerSSN,
                        customerTelephoneNo,
                        customerMobileNo,
                        customerEMail,
                        paymentLimitHour,
                        terminalCode,
                        userId,
                        memberYn,
                        memberCode,
                        memberKindCode,
                        discountValue,
                        saleKindCode,
                        productCode,
                        startDate,
                        endDate,
                        optionYn,
                        cancelLimitDays,
                        cancelLimitHour,
                        nearLimitDays,
                        nearPaymentLimitHour,
                        accountKind}, this.BookingByGroupOperationCompleted, userState);
        }
        
        private void OnBookingByGroupOperationCompleted(object arg) {
            if ((this.BookingByGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookingByGroupCompleted(this, new BookingByGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BookingByGroupNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BookingByGroupNew(
                    string companyCode, 
                    string shopCode, 
                    string customerName, 
                    string customerSSN, 
                    string customerTelephoneNo, 
                    string customerMobileNo, 
                    string customerEMail, 
                    int paymentLimitHour, 
                    string terminalCode, 
                    string userId, 
                    string memberYn, 
                    string memberCode, 
                    string memberKindCode, 
                    string discountValue, 
                    string saleKindCode, 
                    string productCode, 
                    string startDate, 
                    string endDate, 
                    string optionYn, 
                    int cancelLimitDays, 
                    int cancelLimitHour, 
                    int nearLimitDays, 
                    int nearPaymentLimitHour, 
                    string accountKind, 
                    string ProductOption, 
                    string CheckBit, 
                    string CheckData, 
                    string MemberId) {
            object[] results = this.Invoke("BookingByGroupNew", new object[] {
                        companyCode,
                        shopCode,
                        customerName,
                        customerSSN,
                        customerTelephoneNo,
                        customerMobileNo,
                        customerEMail,
                        paymentLimitHour,
                        terminalCode,
                        userId,
                        memberYn,
                        memberCode,
                        memberKindCode,
                        discountValue,
                        saleKindCode,
                        productCode,
                        startDate,
                        endDate,
                        optionYn,
                        cancelLimitDays,
                        cancelLimitHour,
                        nearLimitDays,
                        nearPaymentLimitHour,
                        accountKind,
                        ProductOption,
                        CheckBit,
                        CheckData,
                        MemberId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BookingByGroupNewAsync(
                    string companyCode, 
                    string shopCode, 
                    string customerName, 
                    string customerSSN, 
                    string customerTelephoneNo, 
                    string customerMobileNo, 
                    string customerEMail, 
                    int paymentLimitHour, 
                    string terminalCode, 
                    string userId, 
                    string memberYn, 
                    string memberCode, 
                    string memberKindCode, 
                    string discountValue, 
                    string saleKindCode, 
                    string productCode, 
                    string startDate, 
                    string endDate, 
                    string optionYn, 
                    int cancelLimitDays, 
                    int cancelLimitHour, 
                    int nearLimitDays, 
                    int nearPaymentLimitHour, 
                    string accountKind, 
                    string ProductOption, 
                    string CheckBit, 
                    string CheckData, 
                    string MemberId) {
            this.BookingByGroupNewAsync(companyCode, shopCode, customerName, customerSSN, customerTelephoneNo, customerMobileNo, customerEMail, paymentLimitHour, terminalCode, userId, memberYn, memberCode, memberKindCode, discountValue, saleKindCode, productCode, startDate, endDate, optionYn, cancelLimitDays, cancelLimitHour, nearLimitDays, nearPaymentLimitHour, accountKind, ProductOption, CheckBit, CheckData, MemberId, null);
        }
        
        /// <remarks/>
        public void BookingByGroupNewAsync(
                    string companyCode, 
                    string shopCode, 
                    string customerName, 
                    string customerSSN, 
                    string customerTelephoneNo, 
                    string customerMobileNo, 
                    string customerEMail, 
                    int paymentLimitHour, 
                    string terminalCode, 
                    string userId, 
                    string memberYn, 
                    string memberCode, 
                    string memberKindCode, 
                    string discountValue, 
                    string saleKindCode, 
                    string productCode, 
                    string startDate, 
                    string endDate, 
                    string optionYn, 
                    int cancelLimitDays, 
                    int cancelLimitHour, 
                    int nearLimitDays, 
                    int nearPaymentLimitHour, 
                    string accountKind, 
                    string ProductOption, 
                    string CheckBit, 
                    string CheckData, 
                    string MemberId, 
                    object userState) {
            if ((this.BookingByGroupNewOperationCompleted == null)) {
                this.BookingByGroupNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookingByGroupNewOperationCompleted);
            }
            this.InvokeAsync("BookingByGroupNew", new object[] {
                        companyCode,
                        shopCode,
                        customerName,
                        customerSSN,
                        customerTelephoneNo,
                        customerMobileNo,
                        customerEMail,
                        paymentLimitHour,
                        terminalCode,
                        userId,
                        memberYn,
                        memberCode,
                        memberKindCode,
                        discountValue,
                        saleKindCode,
                        productCode,
                        startDate,
                        endDate,
                        optionYn,
                        cancelLimitDays,
                        cancelLimitHour,
                        nearLimitDays,
                        nearPaymentLimitHour,
                        accountKind,
                        ProductOption,
                        CheckBit,
                        CheckData,
                        MemberId}, this.BookingByGroupNewOperationCompleted, userState);
        }
        
        private void OnBookingByGroupNewOperationCompleted(object arg) {
            if ((this.BookingByGroupNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookingByGroupNewCompleted(this, new BookingByGroupNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BookingByTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BookingByTime(
                    string companyCode, 
                    string shopCode, 
                    string customerName, 
                    string customerSSN, 
                    string customerTelephoneNo, 
                    string customerMobileNo, 
                    string customerEMail, 
                    int paymentLimitHour, 
                    string terminalCode, 
                    string userId, 
                    string memberYn, 
                    string memberCode, 
                    string memberKindCode, 
                    string discountValue, 
                    string saleKindCode, 
                    string productCode, 
                    string playDate, 
                    int playSequence, 
                    int productCount, 
                    int cancelLimitDays, 
                    int cancelLimitHour, 
                    int nearLimitDays, 
                    int nearPaymentLimitHour, 
                    string accountKind) {
            object[] results = this.Invoke("BookingByTime", new object[] {
                        companyCode,
                        shopCode,
                        customerName,
                        customerSSN,
                        customerTelephoneNo,
                        customerMobileNo,
                        customerEMail,
                        paymentLimitHour,
                        terminalCode,
                        userId,
                        memberYn,
                        memberCode,
                        memberKindCode,
                        discountValue,
                        saleKindCode,
                        productCode,
                        playDate,
                        playSequence,
                        productCount,
                        cancelLimitDays,
                        cancelLimitHour,
                        nearLimitDays,
                        nearPaymentLimitHour,
                        accountKind});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BookingByTimeAsync(
                    string companyCode, 
                    string shopCode, 
                    string customerName, 
                    string customerSSN, 
                    string customerTelephoneNo, 
                    string customerMobileNo, 
                    string customerEMail, 
                    int paymentLimitHour, 
                    string terminalCode, 
                    string userId, 
                    string memberYn, 
                    string memberCode, 
                    string memberKindCode, 
                    string discountValue, 
                    string saleKindCode, 
                    string productCode, 
                    string playDate, 
                    int playSequence, 
                    int productCount, 
                    int cancelLimitDays, 
                    int cancelLimitHour, 
                    int nearLimitDays, 
                    int nearPaymentLimitHour, 
                    string accountKind) {
            this.BookingByTimeAsync(companyCode, shopCode, customerName, customerSSN, customerTelephoneNo, customerMobileNo, customerEMail, paymentLimitHour, terminalCode, userId, memberYn, memberCode, memberKindCode, discountValue, saleKindCode, productCode, playDate, playSequence, productCount, cancelLimitDays, cancelLimitHour, nearLimitDays, nearPaymentLimitHour, accountKind, null);
        }
        
        /// <remarks/>
        public void BookingByTimeAsync(
                    string companyCode, 
                    string shopCode, 
                    string customerName, 
                    string customerSSN, 
                    string customerTelephoneNo, 
                    string customerMobileNo, 
                    string customerEMail, 
                    int paymentLimitHour, 
                    string terminalCode, 
                    string userId, 
                    string memberYn, 
                    string memberCode, 
                    string memberKindCode, 
                    string discountValue, 
                    string saleKindCode, 
                    string productCode, 
                    string playDate, 
                    int playSequence, 
                    int productCount, 
                    int cancelLimitDays, 
                    int cancelLimitHour, 
                    int nearLimitDays, 
                    int nearPaymentLimitHour, 
                    string accountKind, 
                    object userState) {
            if ((this.BookingByTimeOperationCompleted == null)) {
                this.BookingByTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookingByTimeOperationCompleted);
            }
            this.InvokeAsync("BookingByTime", new object[] {
                        companyCode,
                        shopCode,
                        customerName,
                        customerSSN,
                        customerTelephoneNo,
                        customerMobileNo,
                        customerEMail,
                        paymentLimitHour,
                        terminalCode,
                        userId,
                        memberYn,
                        memberCode,
                        memberKindCode,
                        discountValue,
                        saleKindCode,
                        productCode,
                        playDate,
                        playSequence,
                        productCount,
                        cancelLimitDays,
                        cancelLimitHour,
                        nearLimitDays,
                        nearPaymentLimitHour,
                        accountKind}, this.BookingByTimeOperationCompleted, userState);
        }
        
        private void OnBookingByTimeOperationCompleted(object arg) {
            if ((this.BookingByTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookingByTimeCompleted(this, new BookingByTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductFilterList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProductFilterList(string companyCode, string shopCode, string startDate, string endDate) {
            object[] results = this.Invoke("GetProductFilterList", new object[] {
                        companyCode,
                        shopCode,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductFilterListAsync(string companyCode, string shopCode, string startDate, string endDate) {
            this.GetProductFilterListAsync(companyCode, shopCode, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetProductFilterListAsync(string companyCode, string shopCode, string startDate, string endDate, object userState) {
            if ((this.GetProductFilterListOperationCompleted == null)) {
                this.GetProductFilterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductFilterListOperationCompleted);
            }
            this.InvokeAsync("GetProductFilterList", new object[] {
                        companyCode,
                        shopCode,
                        startDate,
                        endDate}, this.GetProductFilterListOperationCompleted, userState);
        }
        
        private void OnGetProductFilterListOperationCompleted(object arg) {
            if ((this.GetProductFilterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductFilterListCompleted(this, new GetProductFilterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveBookByBankInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveBookByBankInformation(string companyCode, string shopCode, string bookNo, string bankCode, string bankAccount, string bankDepositor, string depositorSSN) {
            object[] results = this.Invoke("SaveBookByBankInformation", new object[] {
                        companyCode,
                        shopCode,
                        bookNo,
                        bankCode,
                        bankAccount,
                        bankDepositor,
                        depositorSSN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveBookByBankInformationAsync(string companyCode, string shopCode, string bookNo, string bankCode, string bankAccount, string bankDepositor, string depositorSSN) {
            this.SaveBookByBankInformationAsync(companyCode, shopCode, bookNo, bankCode, bankAccount, bankDepositor, depositorSSN, null);
        }
        
        /// <remarks/>
        public void SaveBookByBankInformationAsync(string companyCode, string shopCode, string bookNo, string bankCode, string bankAccount, string bankDepositor, string depositorSSN, object userState) {
            if ((this.SaveBookByBankInformationOperationCompleted == null)) {
                this.SaveBookByBankInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBookByBankInformationOperationCompleted);
            }
            this.InvokeAsync("SaveBookByBankInformation", new object[] {
                        companyCode,
                        shopCode,
                        bookNo,
                        bankCode,
                        bankAccount,
                        bankDepositor,
                        depositorSSN}, this.SaveBookByBankInformationOperationCompleted, userState);
        }
        
        private void OnSaveBookByBankInformationOperationCompleted(object arg) {
            if ((this.SaveBookByBankInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveBookByBankInformationCompleted(this, new SaveBookByBankInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveMemberDiscount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveMemberDiscount(string companyCode, string shopCode, string sequenceNo, string playDate, string discountCode, int discountValue, int addDiscountValue) {
            object[] results = this.Invoke("SaveMemberDiscount", new object[] {
                        companyCode,
                        shopCode,
                        sequenceNo,
                        playDate,
                        discountCode,
                        discountValue,
                        addDiscountValue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveMemberDiscountAsync(string companyCode, string shopCode, string sequenceNo, string playDate, string discountCode, int discountValue, int addDiscountValue) {
            this.SaveMemberDiscountAsync(companyCode, shopCode, sequenceNo, playDate, discountCode, discountValue, addDiscountValue, null);
        }
        
        /// <remarks/>
        public void SaveMemberDiscountAsync(string companyCode, string shopCode, string sequenceNo, string playDate, string discountCode, int discountValue, int addDiscountValue, object userState) {
            if ((this.SaveMemberDiscountOperationCompleted == null)) {
                this.SaveMemberDiscountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMemberDiscountOperationCompleted);
            }
            this.InvokeAsync("SaveMemberDiscount", new object[] {
                        companyCode,
                        shopCode,
                        sequenceNo,
                        playDate,
                        discountCode,
                        discountValue,
                        addDiscountValue}, this.SaveMemberDiscountOperationCompleted, userState);
        }
        
        private void OnSaveMemberDiscountOperationCompleted(object arg) {
            if ((this.SaveMemberDiscountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMemberDiscountCompleted(this, new SaveMemberDiscountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveMemberDiscountCancel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveMemberDiscountCancel(string companyCode, string shopCode, string sequenceNo, int discountValue) {
            object[] results = this.Invoke("SaveMemberDiscountCancel", new object[] {
                        companyCode,
                        shopCode,
                        sequenceNo,
                        discountValue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveMemberDiscountCancelAsync(string companyCode, string shopCode, string sequenceNo, int discountValue) {
            this.SaveMemberDiscountCancelAsync(companyCode, shopCode, sequenceNo, discountValue, null);
        }
        
        /// <remarks/>
        public void SaveMemberDiscountCancelAsync(string companyCode, string shopCode, string sequenceNo, int discountValue, object userState) {
            if ((this.SaveMemberDiscountCancelOperationCompleted == null)) {
                this.SaveMemberDiscountCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMemberDiscountCancelOperationCompleted);
            }
            this.InvokeAsync("SaveMemberDiscountCancel", new object[] {
                        companyCode,
                        shopCode,
                        sequenceNo,
                        discountValue}, this.SaveMemberDiscountCancelOperationCompleted, userState);
        }
        
        private void OnSaveMemberDiscountCancelOperationCompleted(object arg) {
            if ((this.SaveMemberDiscountCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMemberDiscountCancelCompleted(this, new SaveMemberDiscountCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveBankInfomationOrCarNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveBankInfomationOrCarNumber(string companyCode, string shopCode, string bookNo, string bankCode, string bankAccount, string bankDepositor, string depositorSSN, string uniqueNo, string productCode, string playDate, string carNumber) {
            object[] results = this.Invoke("SaveBankInfomationOrCarNumber", new object[] {
                        companyCode,
                        shopCode,
                        bookNo,
                        bankCode,
                        bankAccount,
                        bankDepositor,
                        depositorSSN,
                        uniqueNo,
                        productCode,
                        playDate,
                        carNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveBankInfomationOrCarNumberAsync(string companyCode, string shopCode, string bookNo, string bankCode, string bankAccount, string bankDepositor, string depositorSSN, string uniqueNo, string productCode, string playDate, string carNumber) {
            this.SaveBankInfomationOrCarNumberAsync(companyCode, shopCode, bookNo, bankCode, bankAccount, bankDepositor, depositorSSN, uniqueNo, productCode, playDate, carNumber, null);
        }
        
        /// <remarks/>
        public void SaveBankInfomationOrCarNumberAsync(string companyCode, string shopCode, string bookNo, string bankCode, string bankAccount, string bankDepositor, string depositorSSN, string uniqueNo, string productCode, string playDate, string carNumber, object userState) {
            if ((this.SaveBankInfomationOrCarNumberOperationCompleted == null)) {
                this.SaveBankInfomationOrCarNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBankInfomationOrCarNumberOperationCompleted);
            }
            this.InvokeAsync("SaveBankInfomationOrCarNumber", new object[] {
                        companyCode,
                        shopCode,
                        bookNo,
                        bankCode,
                        bankAccount,
                        bankDepositor,
                        depositorSSN,
                        uniqueNo,
                        productCode,
                        playDate,
                        carNumber}, this.SaveBankInfomationOrCarNumberOperationCompleted, userState);
        }
        
        private void OnSaveBankInfomationOrCarNumberOperationCompleted(object arg) {
            if ((this.SaveBankInfomationOrCarNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveBankInfomationOrCarNumberCompleted(this, new SaveBankInfomationOrCarNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LodgingRefundByWeb", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LodgingRefundByWeb(string companyCode, string shopCode, string bookNo, bool cancelAll, string productCode, string playDate, string uniqueNo) {
            object[] results = this.Invoke("LodgingRefundByWeb", new object[] {
                        companyCode,
                        shopCode,
                        bookNo,
                        cancelAll,
                        productCode,
                        playDate,
                        uniqueNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LodgingRefundByWebAsync(string companyCode, string shopCode, string bookNo, bool cancelAll, string productCode, string playDate, string uniqueNo) {
            this.LodgingRefundByWebAsync(companyCode, shopCode, bookNo, cancelAll, productCode, playDate, uniqueNo, null);
        }
        
        /// <remarks/>
        public void LodgingRefundByWebAsync(string companyCode, string shopCode, string bookNo, bool cancelAll, string productCode, string playDate, string uniqueNo, object userState) {
            if ((this.LodgingRefundByWebOperationCompleted == null)) {
                this.LodgingRefundByWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLodgingRefundByWebOperationCompleted);
            }
            this.InvokeAsync("LodgingRefundByWeb", new object[] {
                        companyCode,
                        shopCode,
                        bookNo,
                        cancelAll,
                        productCode,
                        playDate,
                        uniqueNo}, this.LodgingRefundByWebOperationCompleted, userState);
        }
        
        private void OnLodgingRefundByWebOperationCompleted(object arg) {
            if ((this.LodgingRefundByWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LodgingRefundByWebCompleted(this, new LodgingRefundByWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LodgingRefundByWeb2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LodgingRefundByWeb2(string companyCode, string shopCode, string bookNo, bool cancelAll, string productCode, string playDate, string playSequence, string saleSequence, string uniqueNo, string MemberCode, string MemberId) {
            object[] results = this.Invoke("LodgingRefundByWeb2", new object[] {
                        companyCode,
                        shopCode,
                        bookNo,
                        cancelAll,
                        productCode,
                        playDate,
                        playSequence,
                        saleSequence,
                        uniqueNo,
                        MemberCode,
                        MemberId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LodgingRefundByWeb2Async(string companyCode, string shopCode, string bookNo, bool cancelAll, string productCode, string playDate, string playSequence, string saleSequence, string uniqueNo, string MemberCode, string MemberId) {
            this.LodgingRefundByWeb2Async(companyCode, shopCode, bookNo, cancelAll, productCode, playDate, playSequence, saleSequence, uniqueNo, MemberCode, MemberId, null);
        }
        
        /// <remarks/>
        public void LodgingRefundByWeb2Async(string companyCode, string shopCode, string bookNo, bool cancelAll, string productCode, string playDate, string playSequence, string saleSequence, string uniqueNo, string MemberCode, string MemberId, object userState) {
            if ((this.LodgingRefundByWeb2OperationCompleted == null)) {
                this.LodgingRefundByWeb2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnLodgingRefundByWeb2OperationCompleted);
            }
            this.InvokeAsync("LodgingRefundByWeb2", new object[] {
                        companyCode,
                        shopCode,
                        bookNo,
                        cancelAll,
                        productCode,
                        playDate,
                        playSequence,
                        saleSequence,
                        uniqueNo,
                        MemberCode,
                        MemberId}, this.LodgingRefundByWeb2OperationCompleted, userState);
        }
        
        private void OnLodgingRefundByWeb2OperationCompleted(object arg) {
            if ((this.LodgingRefundByWeb2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LodgingRefundByWeb2Completed(this, new LodgingRefundByWeb2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Refund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Refund(
                    string companyCode, 
                    string shopCode, 
                    string terminalCode, 
                    string userId, 
                    string bookYn, 
                    string bookNo, 
                    string memberYn, 
                    string memberCode, 
                    string saleKindCode, 
                    string fullPaymentYn, 
                    string depositPaymentYn, 
                    string productCode, 
                    string productFee, 
                    string refundFee, 
                    string playDate, 
                    string discountYn, 
                    string premiumYn, 
                    string memberDiscountYn, 
                    string sequenceNo, 
                    string accountDate, 
                    string cancelAll, 
                    string paymentCode, 
                    string paymentName, 
                    string paymentFee, 
                    string cardSequenceNo, 
                    string cashSequenceNo, 
                    string autoCancelYn, 
                    string groupPaymentCode, 
                    string paymentKind, 
                    string refundPaymentFee, 
                    string originalPaymentCode, 
                    string accountKind) {
            object[] results = this.Invoke("Refund", new object[] {
                        companyCode,
                        shopCode,
                        terminalCode,
                        userId,
                        bookYn,
                        bookNo,
                        memberYn,
                        memberCode,
                        saleKindCode,
                        fullPaymentYn,
                        depositPaymentYn,
                        productCode,
                        productFee,
                        refundFee,
                        playDate,
                        discountYn,
                        premiumYn,
                        memberDiscountYn,
                        sequenceNo,
                        accountDate,
                        cancelAll,
                        paymentCode,
                        paymentName,
                        paymentFee,
                        cardSequenceNo,
                        cashSequenceNo,
                        autoCancelYn,
                        groupPaymentCode,
                        paymentKind,
                        refundPaymentFee,
                        originalPaymentCode,
                        accountKind});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RefundAsync(
                    string companyCode, 
                    string shopCode, 
                    string terminalCode, 
                    string userId, 
                    string bookYn, 
                    string bookNo, 
                    string memberYn, 
                    string memberCode, 
                    string saleKindCode, 
                    string fullPaymentYn, 
                    string depositPaymentYn, 
                    string productCode, 
                    string productFee, 
                    string refundFee, 
                    string playDate, 
                    string discountYn, 
                    string premiumYn, 
                    string memberDiscountYn, 
                    string sequenceNo, 
                    string accountDate, 
                    string cancelAll, 
                    string paymentCode, 
                    string paymentName, 
                    string paymentFee, 
                    string cardSequenceNo, 
                    string cashSequenceNo, 
                    string autoCancelYn, 
                    string groupPaymentCode, 
                    string paymentKind, 
                    string refundPaymentFee, 
                    string originalPaymentCode, 
                    string accountKind) {
            this.RefundAsync(companyCode, shopCode, terminalCode, userId, bookYn, bookNo, memberYn, memberCode, saleKindCode, fullPaymentYn, depositPaymentYn, productCode, productFee, refundFee, playDate, discountYn, premiumYn, memberDiscountYn, sequenceNo, accountDate, cancelAll, paymentCode, paymentName, paymentFee, cardSequenceNo, cashSequenceNo, autoCancelYn, groupPaymentCode, paymentKind, refundPaymentFee, originalPaymentCode, accountKind, null);
        }
        
        /// <remarks/>
        public void RefundAsync(
                    string companyCode, 
                    string shopCode, 
                    string terminalCode, 
                    string userId, 
                    string bookYn, 
                    string bookNo, 
                    string memberYn, 
                    string memberCode, 
                    string saleKindCode, 
                    string fullPaymentYn, 
                    string depositPaymentYn, 
                    string productCode, 
                    string productFee, 
                    string refundFee, 
                    string playDate, 
                    string discountYn, 
                    string premiumYn, 
                    string memberDiscountYn, 
                    string sequenceNo, 
                    string accountDate, 
                    string cancelAll, 
                    string paymentCode, 
                    string paymentName, 
                    string paymentFee, 
                    string cardSequenceNo, 
                    string cashSequenceNo, 
                    string autoCancelYn, 
                    string groupPaymentCode, 
                    string paymentKind, 
                    string refundPaymentFee, 
                    string originalPaymentCode, 
                    string accountKind, 
                    object userState) {
            if ((this.RefundOperationCompleted == null)) {
                this.RefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefundOperationCompleted);
            }
            this.InvokeAsync("Refund", new object[] {
                        companyCode,
                        shopCode,
                        terminalCode,
                        userId,
                        bookYn,
                        bookNo,
                        memberYn,
                        memberCode,
                        saleKindCode,
                        fullPaymentYn,
                        depositPaymentYn,
                        productCode,
                        productFee,
                        refundFee,
                        playDate,
                        discountYn,
                        premiumYn,
                        memberDiscountYn,
                        sequenceNo,
                        accountDate,
                        cancelAll,
                        paymentCode,
                        paymentName,
                        paymentFee,
                        cardSequenceNo,
                        cashSequenceNo,
                        autoCancelYn,
                        groupPaymentCode,
                        paymentKind,
                        refundPaymentFee,
                        originalPaymentCode,
                        accountKind}, this.RefundOperationCompleted, userState);
        }
        
        private void OnRefundOperationCompleted(object arg) {
            if ((this.RefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefundCompleted(this, new RefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Refund2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Refund2(
                    string companyCode, 
                    string shopCode, 
                    string terminalCode, 
                    string userId, 
                    string bookYn, 
                    string bookNo, 
                    string memberYn, 
                    string memberCode, 
                    string saleKindCode, 
                    string fullPaymentYn, 
                    string depositPaymentYn, 
                    string productCode, 
                    string productFee, 
                    string refundFee, 
                    string playDate, 
                    string playSequence, 
                    string saleSequence, 
                    string discountYn, 
                    string premiumYn, 
                    string memberDiscountYn, 
                    string sequenceNo, 
                    string accountDate, 
                    string cancelAll, 
                    string paymentCode, 
                    string paymentName, 
                    string paymentFee, 
                    string cardSequenceNo, 
                    string cashSequenceNo, 
                    string autoCancelYn, 
                    string groupPaymentCode, 
                    string paymentKind, 
                    string refundPaymentFee, 
                    string originalPaymentCode, 
                    string accountKind, 
                    string MemberId) {
            object[] results = this.Invoke("Refund2", new object[] {
                        companyCode,
                        shopCode,
                        terminalCode,
                        userId,
                        bookYn,
                        bookNo,
                        memberYn,
                        memberCode,
                        saleKindCode,
                        fullPaymentYn,
                        depositPaymentYn,
                        productCode,
                        productFee,
                        refundFee,
                        playDate,
                        playSequence,
                        saleSequence,
                        discountYn,
                        premiumYn,
                        memberDiscountYn,
                        sequenceNo,
                        accountDate,
                        cancelAll,
                        paymentCode,
                        paymentName,
                        paymentFee,
                        cardSequenceNo,
                        cashSequenceNo,
                        autoCancelYn,
                        groupPaymentCode,
                        paymentKind,
                        refundPaymentFee,
                        originalPaymentCode,
                        accountKind,
                        MemberId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Refund2Async(
                    string companyCode, 
                    string shopCode, 
                    string terminalCode, 
                    string userId, 
                    string bookYn, 
                    string bookNo, 
                    string memberYn, 
                    string memberCode, 
                    string saleKindCode, 
                    string fullPaymentYn, 
                    string depositPaymentYn, 
                    string productCode, 
                    string productFee, 
                    string refundFee, 
                    string playDate, 
                    string playSequence, 
                    string saleSequence, 
                    string discountYn, 
                    string premiumYn, 
                    string memberDiscountYn, 
                    string sequenceNo, 
                    string accountDate, 
                    string cancelAll, 
                    string paymentCode, 
                    string paymentName, 
                    string paymentFee, 
                    string cardSequenceNo, 
                    string cashSequenceNo, 
                    string autoCancelYn, 
                    string groupPaymentCode, 
                    string paymentKind, 
                    string refundPaymentFee, 
                    string originalPaymentCode, 
                    string accountKind, 
                    string MemberId) {
            this.Refund2Async(companyCode, shopCode, terminalCode, userId, bookYn, bookNo, memberYn, memberCode, saleKindCode, fullPaymentYn, depositPaymentYn, productCode, productFee, refundFee, playDate, playSequence, saleSequence, discountYn, premiumYn, memberDiscountYn, sequenceNo, accountDate, cancelAll, paymentCode, paymentName, paymentFee, cardSequenceNo, cashSequenceNo, autoCancelYn, groupPaymentCode, paymentKind, refundPaymentFee, originalPaymentCode, accountKind, MemberId, null);
        }
        
        /// <remarks/>
        public void Refund2Async(
                    string companyCode, 
                    string shopCode, 
                    string terminalCode, 
                    string userId, 
                    string bookYn, 
                    string bookNo, 
                    string memberYn, 
                    string memberCode, 
                    string saleKindCode, 
                    string fullPaymentYn, 
                    string depositPaymentYn, 
                    string productCode, 
                    string productFee, 
                    string refundFee, 
                    string playDate, 
                    string playSequence, 
                    string saleSequence, 
                    string discountYn, 
                    string premiumYn, 
                    string memberDiscountYn, 
                    string sequenceNo, 
                    string accountDate, 
                    string cancelAll, 
                    string paymentCode, 
                    string paymentName, 
                    string paymentFee, 
                    string cardSequenceNo, 
                    string cashSequenceNo, 
                    string autoCancelYn, 
                    string groupPaymentCode, 
                    string paymentKind, 
                    string refundPaymentFee, 
                    string originalPaymentCode, 
                    string accountKind, 
                    string MemberId, 
                    object userState) {
            if ((this.Refund2OperationCompleted == null)) {
                this.Refund2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefund2OperationCompleted);
            }
            this.InvokeAsync("Refund2", new object[] {
                        companyCode,
                        shopCode,
                        terminalCode,
                        userId,
                        bookYn,
                        bookNo,
                        memberYn,
                        memberCode,
                        saleKindCode,
                        fullPaymentYn,
                        depositPaymentYn,
                        productCode,
                        productFee,
                        refundFee,
                        playDate,
                        playSequence,
                        saleSequence,
                        discountYn,
                        premiumYn,
                        memberDiscountYn,
                        sequenceNo,
                        accountDate,
                        cancelAll,
                        paymentCode,
                        paymentName,
                        paymentFee,
                        cardSequenceNo,
                        cashSequenceNo,
                        autoCancelYn,
                        groupPaymentCode,
                        paymentKind,
                        refundPaymentFee,
                        originalPaymentCode,
                        accountKind,
                        MemberId}, this.Refund2OperationCompleted, userState);
        }
        
        private void OnRefund2OperationCompleted(object arg) {
            if ((this.Refund2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Refund2Completed(this, new Refund2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BookPaymentByGeneralCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BookPaymentByGeneralCard(
                    string companyCode, 
                    string shopCode, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    string participationNo, 
                    string track2Data, 
                    string cardNo, 
                    string avaliablePeriod, 
                    string authenticationType, 
                    string authenticationNo, 
                    string passWord, 
                    int instrallPeriod, 
                    string inputMethod, 
                    string terminalCode, 
                    string playDate, 
                    string saleDate, 
                    int saleCount, 
                    int saleAmount, 
                    int vatFee, 
                    int maxiumAmount, 
                    string saleUserId, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort, 
                    string productName, 
                    string customerName, 
                    string customerEMail) {
            object[] results = this.Invoke("BookPaymentByGeneralCard", new object[] {
                        companyCode,
                        shopCode,
                        sequenceNo,
                        uniqueNo,
                        totalPaymentFee,
                        participationNo,
                        track2Data,
                        cardNo,
                        avaliablePeriod,
                        authenticationType,
                        authenticationNo,
                        passWord,
                        instrallPeriod,
                        inputMethod,
                        terminalCode,
                        playDate,
                        saleDate,
                        saleCount,
                        saleAmount,
                        vatFee,
                        maxiumAmount,
                        saleUserId,
                        approvalType,
                        serverIp,
                        serverPort,
                        productName,
                        customerName,
                        customerEMail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BookPaymentByGeneralCardAsync(
                    string companyCode, 
                    string shopCode, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    string participationNo, 
                    string track2Data, 
                    string cardNo, 
                    string avaliablePeriod, 
                    string authenticationType, 
                    string authenticationNo, 
                    string passWord, 
                    int instrallPeriod, 
                    string inputMethod, 
                    string terminalCode, 
                    string playDate, 
                    string saleDate, 
                    int saleCount, 
                    int saleAmount, 
                    int vatFee, 
                    int maxiumAmount, 
                    string saleUserId, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort, 
                    string productName, 
                    string customerName, 
                    string customerEMail) {
            this.BookPaymentByGeneralCardAsync(companyCode, shopCode, sequenceNo, uniqueNo, totalPaymentFee, participationNo, track2Data, cardNo, avaliablePeriod, authenticationType, authenticationNo, passWord, instrallPeriod, inputMethod, terminalCode, playDate, saleDate, saleCount, saleAmount, vatFee, maxiumAmount, saleUserId, approvalType, serverIp, serverPort, productName, customerName, customerEMail, null);
        }
        
        /// <remarks/>
        public void BookPaymentByGeneralCardAsync(
                    string companyCode, 
                    string shopCode, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    string participationNo, 
                    string track2Data, 
                    string cardNo, 
                    string avaliablePeriod, 
                    string authenticationType, 
                    string authenticationNo, 
                    string passWord, 
                    int instrallPeriod, 
                    string inputMethod, 
                    string terminalCode, 
                    string playDate, 
                    string saleDate, 
                    int saleCount, 
                    int saleAmount, 
                    int vatFee, 
                    int maxiumAmount, 
                    string saleUserId, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort, 
                    string productName, 
                    string customerName, 
                    string customerEMail, 
                    object userState) {
            if ((this.BookPaymentByGeneralCardOperationCompleted == null)) {
                this.BookPaymentByGeneralCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookPaymentByGeneralCardOperationCompleted);
            }
            this.InvokeAsync("BookPaymentByGeneralCard", new object[] {
                        companyCode,
                        shopCode,
                        sequenceNo,
                        uniqueNo,
                        totalPaymentFee,
                        participationNo,
                        track2Data,
                        cardNo,
                        avaliablePeriod,
                        authenticationType,
                        authenticationNo,
                        passWord,
                        instrallPeriod,
                        inputMethod,
                        terminalCode,
                        playDate,
                        saleDate,
                        saleCount,
                        saleAmount,
                        vatFee,
                        maxiumAmount,
                        saleUserId,
                        approvalType,
                        serverIp,
                        serverPort,
                        productName,
                        customerName,
                        customerEMail}, this.BookPaymentByGeneralCardOperationCompleted, userState);
        }
        
        private void OnBookPaymentByGeneralCardOperationCompleted(object arg) {
            if ((this.BookPaymentByGeneralCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookPaymentByGeneralCardCompleted(this, new BookPaymentByGeneralCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BookPaymentByISP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BookPaymentByISP(
                    string companyCode, 
                    string shopCode, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    string participationNo, 
                    int instrallPeriod, 
                    string terminalCode, 
                    string playDate, 
                    string saleDate, 
                    int saleCount, 
                    int saleAmount, 
                    int maxiumAmount, 
                    string saleUserId, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort, 
                    string productName, 
                    string customerName, 
                    string customerEMail, 
                    string customerTelephoneNo, 
                    string KVPCardCode, 
                    string sessionKey, 
                    string encryptedData) {
            object[] results = this.Invoke("BookPaymentByISP", new object[] {
                        companyCode,
                        shopCode,
                        sequenceNo,
                        uniqueNo,
                        totalPaymentFee,
                        participationNo,
                        instrallPeriod,
                        terminalCode,
                        playDate,
                        saleDate,
                        saleCount,
                        saleAmount,
                        maxiumAmount,
                        saleUserId,
                        approvalType,
                        serverIp,
                        serverPort,
                        productName,
                        customerName,
                        customerEMail,
                        customerTelephoneNo,
                        KVPCardCode,
                        sessionKey,
                        encryptedData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BookPaymentByISPAsync(
                    string companyCode, 
                    string shopCode, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    string participationNo, 
                    int instrallPeriod, 
                    string terminalCode, 
                    string playDate, 
                    string saleDate, 
                    int saleCount, 
                    int saleAmount, 
                    int maxiumAmount, 
                    string saleUserId, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort, 
                    string productName, 
                    string customerName, 
                    string customerEMail, 
                    string customerTelephoneNo, 
                    string KVPCardCode, 
                    string sessionKey, 
                    string encryptedData) {
            this.BookPaymentByISPAsync(companyCode, shopCode, sequenceNo, uniqueNo, totalPaymentFee, participationNo, instrallPeriod, terminalCode, playDate, saleDate, saleCount, saleAmount, maxiumAmount, saleUserId, approvalType, serverIp, serverPort, productName, customerName, customerEMail, customerTelephoneNo, KVPCardCode, sessionKey, encryptedData, null);
        }
        
        /// <remarks/>
        public void BookPaymentByISPAsync(
                    string companyCode, 
                    string shopCode, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    string participationNo, 
                    int instrallPeriod, 
                    string terminalCode, 
                    string playDate, 
                    string saleDate, 
                    int saleCount, 
                    int saleAmount, 
                    int maxiumAmount, 
                    string saleUserId, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort, 
                    string productName, 
                    string customerName, 
                    string customerEMail, 
                    string customerTelephoneNo, 
                    string KVPCardCode, 
                    string sessionKey, 
                    string encryptedData, 
                    object userState) {
            if ((this.BookPaymentByISPOperationCompleted == null)) {
                this.BookPaymentByISPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookPaymentByISPOperationCompleted);
            }
            this.InvokeAsync("BookPaymentByISP", new object[] {
                        companyCode,
                        shopCode,
                        sequenceNo,
                        uniqueNo,
                        totalPaymentFee,
                        participationNo,
                        instrallPeriod,
                        terminalCode,
                        playDate,
                        saleDate,
                        saleCount,
                        saleAmount,
                        maxiumAmount,
                        saleUserId,
                        approvalType,
                        serverIp,
                        serverPort,
                        productName,
                        customerName,
                        customerEMail,
                        customerTelephoneNo,
                        KVPCardCode,
                        sessionKey,
                        encryptedData}, this.BookPaymentByISPOperationCompleted, userState);
        }
        
        private void OnBookPaymentByISPOperationCompleted(object arg) {
            if ((this.BookPaymentByISPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookPaymentByISPCompleted(this, new BookPaymentByISPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BookPaymentBy3D", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BookPaymentBy3D(
                    string companyCode, 
                    string shopCode, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    string participationNo, 
                    string track2Data, 
                    string cardNo, 
                    string avaliablePeriod, 
                    string authenticationType, 
                    string authenticationNo, 
                    string passWord, 
                    int instrallPeriod, 
                    string inputMethod, 
                    string terminalCode, 
                    string playDate, 
                    string saleDate, 
                    int saleCount, 
                    int saleAmount, 
                    int vatFee, 
                    int maxiumAmount, 
                    string saleUserId, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort, 
                    string productName, 
                    string customerName, 
                    string customerEMail, 
                    string cavv, 
                    string xid) {
            object[] results = this.Invoke("BookPaymentBy3D", new object[] {
                        companyCode,
                        shopCode,
                        sequenceNo,
                        uniqueNo,
                        totalPaymentFee,
                        participationNo,
                        track2Data,
                        cardNo,
                        avaliablePeriod,
                        authenticationType,
                        authenticationNo,
                        passWord,
                        instrallPeriod,
                        inputMethod,
                        terminalCode,
                        playDate,
                        saleDate,
                        saleCount,
                        saleAmount,
                        vatFee,
                        maxiumAmount,
                        saleUserId,
                        approvalType,
                        serverIp,
                        serverPort,
                        productName,
                        customerName,
                        customerEMail,
                        cavv,
                        xid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BookPaymentBy3DAsync(
                    string companyCode, 
                    string shopCode, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    string participationNo, 
                    string track2Data, 
                    string cardNo, 
                    string avaliablePeriod, 
                    string authenticationType, 
                    string authenticationNo, 
                    string passWord, 
                    int instrallPeriod, 
                    string inputMethod, 
                    string terminalCode, 
                    string playDate, 
                    string saleDate, 
                    int saleCount, 
                    int saleAmount, 
                    int vatFee, 
                    int maxiumAmount, 
                    string saleUserId, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort, 
                    string productName, 
                    string customerName, 
                    string customerEMail, 
                    string cavv, 
                    string xid) {
            this.BookPaymentBy3DAsync(companyCode, shopCode, sequenceNo, uniqueNo, totalPaymentFee, participationNo, track2Data, cardNo, avaliablePeriod, authenticationType, authenticationNo, passWord, instrallPeriod, inputMethod, terminalCode, playDate, saleDate, saleCount, saleAmount, vatFee, maxiumAmount, saleUserId, approvalType, serverIp, serverPort, productName, customerName, customerEMail, cavv, xid, null);
        }
        
        /// <remarks/>
        public void BookPaymentBy3DAsync(
                    string companyCode, 
                    string shopCode, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    string participationNo, 
                    string track2Data, 
                    string cardNo, 
                    string avaliablePeriod, 
                    string authenticationType, 
                    string authenticationNo, 
                    string passWord, 
                    int instrallPeriod, 
                    string inputMethod, 
                    string terminalCode, 
                    string playDate, 
                    string saleDate, 
                    int saleCount, 
                    int saleAmount, 
                    int vatFee, 
                    int maxiumAmount, 
                    string saleUserId, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort, 
                    string productName, 
                    string customerName, 
                    string customerEMail, 
                    string cavv, 
                    string xid, 
                    object userState) {
            if ((this.BookPaymentBy3DOperationCompleted == null)) {
                this.BookPaymentBy3DOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookPaymentBy3DOperationCompleted);
            }
            this.InvokeAsync("BookPaymentBy3D", new object[] {
                        companyCode,
                        shopCode,
                        sequenceNo,
                        uniqueNo,
                        totalPaymentFee,
                        participationNo,
                        track2Data,
                        cardNo,
                        avaliablePeriod,
                        authenticationType,
                        authenticationNo,
                        passWord,
                        instrallPeriod,
                        inputMethod,
                        terminalCode,
                        playDate,
                        saleDate,
                        saleCount,
                        saleAmount,
                        vatFee,
                        maxiumAmount,
                        saleUserId,
                        approvalType,
                        serverIp,
                        serverPort,
                        productName,
                        customerName,
                        customerEMail,
                        cavv,
                        xid}, this.BookPaymentBy3DOperationCompleted, userState);
        }
        
        private void OnBookPaymentBy3DOperationCompleted(object arg) {
            if ((this.BookPaymentBy3DCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookPaymentBy3DCompleted(this, new BookPaymentBy3DCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BookPaymentByRealAccountKFTC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BookPaymentByRealAccountKFTC(string companyCode, string shopCode, string sequenceNo, string uniqueNo, int totalPaymentFee, int saleAmount, string participationNo, string saleDate, string terminalCode, string saleUserId) {
            object[] results = this.Invoke("BookPaymentByRealAccountKFTC", new object[] {
                        companyCode,
                        shopCode,
                        sequenceNo,
                        uniqueNo,
                        totalPaymentFee,
                        saleAmount,
                        participationNo,
                        saleDate,
                        terminalCode,
                        saleUserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BookPaymentByRealAccountKFTCAsync(string companyCode, string shopCode, string sequenceNo, string uniqueNo, int totalPaymentFee, int saleAmount, string participationNo, string saleDate, string terminalCode, string saleUserId) {
            this.BookPaymentByRealAccountKFTCAsync(companyCode, shopCode, sequenceNo, uniqueNo, totalPaymentFee, saleAmount, participationNo, saleDate, terminalCode, saleUserId, null);
        }
        
        /// <remarks/>
        public void BookPaymentByRealAccountKFTCAsync(string companyCode, string shopCode, string sequenceNo, string uniqueNo, int totalPaymentFee, int saleAmount, string participationNo, string saleDate, string terminalCode, string saleUserId, object userState) {
            if ((this.BookPaymentByRealAccountKFTCOperationCompleted == null)) {
                this.BookPaymentByRealAccountKFTCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookPaymentByRealAccountKFTCOperationCompleted);
            }
            this.InvokeAsync("BookPaymentByRealAccountKFTC", new object[] {
                        companyCode,
                        shopCode,
                        sequenceNo,
                        uniqueNo,
                        totalPaymentFee,
                        saleAmount,
                        participationNo,
                        saleDate,
                        terminalCode,
                        saleUserId}, this.BookPaymentByRealAccountKFTCOperationCompleted, userState);
        }
        
        private void OnBookPaymentByRealAccountKFTCOperationCompleted(object arg) {
            if ((this.BookPaymentByRealAccountKFTCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookPaymentByRealAccountKFTCCompleted(this, new BookPaymentByRealAccountKFTCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BookPaymentByRealAccountKFTCByAuth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BookPaymentByRealAccountKFTCByAuth(
                    string companyCode, 
                    string shopCode, 
                    string cardSequenceNo, 
                    string shopName, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    int saleAmount, 
                    string participationNo, 
                    string saleDate, 
                    string terminalCode, 
                    string saleUserId, 
                    string playDate, 
                    int saleCount, 
                    string mtid, 
                    string serverIp, 
                    int serverPort, 
                    string productName, 
                    string customerName, 
                    string customerEMail, 
                    string customerTelephoneNo) {
            object[] results = this.Invoke("BookPaymentByRealAccountKFTCByAuth", new object[] {
                        companyCode,
                        shopCode,
                        cardSequenceNo,
                        shopName,
                        sequenceNo,
                        uniqueNo,
                        totalPaymentFee,
                        saleAmount,
                        participationNo,
                        saleDate,
                        terminalCode,
                        saleUserId,
                        playDate,
                        saleCount,
                        mtid,
                        serverIp,
                        serverPort,
                        productName,
                        customerName,
                        customerEMail,
                        customerTelephoneNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BookPaymentByRealAccountKFTCByAuthAsync(
                    string companyCode, 
                    string shopCode, 
                    string cardSequenceNo, 
                    string shopName, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    int saleAmount, 
                    string participationNo, 
                    string saleDate, 
                    string terminalCode, 
                    string saleUserId, 
                    string playDate, 
                    int saleCount, 
                    string mtid, 
                    string serverIp, 
                    int serverPort, 
                    string productName, 
                    string customerName, 
                    string customerEMail, 
                    string customerTelephoneNo) {
            this.BookPaymentByRealAccountKFTCByAuthAsync(companyCode, shopCode, cardSequenceNo, shopName, sequenceNo, uniqueNo, totalPaymentFee, saleAmount, participationNo, saleDate, terminalCode, saleUserId, playDate, saleCount, mtid, serverIp, serverPort, productName, customerName, customerEMail, customerTelephoneNo, null);
        }
        
        /// <remarks/>
        public void BookPaymentByRealAccountKFTCByAuthAsync(
                    string companyCode, 
                    string shopCode, 
                    string cardSequenceNo, 
                    string shopName, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    int saleAmount, 
                    string participationNo, 
                    string saleDate, 
                    string terminalCode, 
                    string saleUserId, 
                    string playDate, 
                    int saleCount, 
                    string mtid, 
                    string serverIp, 
                    int serverPort, 
                    string productName, 
                    string customerName, 
                    string customerEMail, 
                    string customerTelephoneNo, 
                    object userState) {
            if ((this.BookPaymentByRealAccountKFTCByAuthOperationCompleted == null)) {
                this.BookPaymentByRealAccountKFTCByAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookPaymentByRealAccountKFTCByAuthOperationCompleted);
            }
            this.InvokeAsync("BookPaymentByRealAccountKFTCByAuth", new object[] {
                        companyCode,
                        shopCode,
                        cardSequenceNo,
                        shopName,
                        sequenceNo,
                        uniqueNo,
                        totalPaymentFee,
                        saleAmount,
                        participationNo,
                        saleDate,
                        terminalCode,
                        saleUserId,
                        playDate,
                        saleCount,
                        mtid,
                        serverIp,
                        serverPort,
                        productName,
                        customerName,
                        customerEMail,
                        customerTelephoneNo}, this.BookPaymentByRealAccountKFTCByAuthOperationCompleted, userState);
        }
        
        private void OnBookPaymentByRealAccountKFTCByAuthOperationCompleted(object arg) {
            if ((this.BookPaymentByRealAccountKFTCByAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookPaymentByRealAccountKFTCByAuthCompleted(this, new BookPaymentByRealAccountKFTCByAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BookPaymentByVirtual", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BookPaymentByVirtual(
                    string companyCode, 
                    string shopCode, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    string participationNo, 
                    string bankCode, 
                    string terminalCode, 
                    int saleCount, 
                    int saleAmount, 
                    string saleUserId, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort, 
                    string customerName, 
                    string customerSSN, 
                    string mobileNo) {
            object[] results = this.Invoke("BookPaymentByVirtual", new object[] {
                        companyCode,
                        shopCode,
                        sequenceNo,
                        uniqueNo,
                        totalPaymentFee,
                        participationNo,
                        bankCode,
                        terminalCode,
                        saleCount,
                        saleAmount,
                        saleUserId,
                        approvalType,
                        serverIp,
                        serverPort,
                        customerName,
                        customerSSN,
                        mobileNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BookPaymentByVirtualAsync(
                    string companyCode, 
                    string shopCode, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    string participationNo, 
                    string bankCode, 
                    string terminalCode, 
                    int saleCount, 
                    int saleAmount, 
                    string saleUserId, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort, 
                    string customerName, 
                    string customerSSN, 
                    string mobileNo) {
            this.BookPaymentByVirtualAsync(companyCode, shopCode, sequenceNo, uniqueNo, totalPaymentFee, participationNo, bankCode, terminalCode, saleCount, saleAmount, saleUserId, approvalType, serverIp, serverPort, customerName, customerSSN, mobileNo, null);
        }
        
        /// <remarks/>
        public void BookPaymentByVirtualAsync(
                    string companyCode, 
                    string shopCode, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    string participationNo, 
                    string bankCode, 
                    string terminalCode, 
                    int saleCount, 
                    int saleAmount, 
                    string saleUserId, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort, 
                    string customerName, 
                    string customerSSN, 
                    string mobileNo, 
                    object userState) {
            if ((this.BookPaymentByVirtualOperationCompleted == null)) {
                this.BookPaymentByVirtualOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookPaymentByVirtualOperationCompleted);
            }
            this.InvokeAsync("BookPaymentByVirtual", new object[] {
                        companyCode,
                        shopCode,
                        sequenceNo,
                        uniqueNo,
                        totalPaymentFee,
                        participationNo,
                        bankCode,
                        terminalCode,
                        saleCount,
                        saleAmount,
                        saleUserId,
                        approvalType,
                        serverIp,
                        serverPort,
                        customerName,
                        customerSSN,
                        mobileNo}, this.BookPaymentByVirtualOperationCompleted, userState);
        }
        
        private void OnBookPaymentByVirtualOperationCompleted(object arg) {
            if ((this.BookPaymentByVirtualCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookPaymentByVirtualCompleted(this, new BookPaymentByVirtualCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BookPaymentByMobile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BookPaymentByMobile(
                    string companyCode, 
                    string shopCode, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    string mobileCompany, 
                    int saleAmount, 
                    string goodName, 
                    string playDate, 
                    string customerSSN, 
                    string customerName, 
                    string customerId, 
                    string eMail, 
                    string mobileNo, 
                    string workId, 
                    string participationNo, 
                    string terminalCode, 
                    int saleCount, 
                    bool sendMail, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort, 
                    string cardSequenceNo, 
                    string mobileId, 
                    string authenticationNo) {
            object[] results = this.Invoke("BookPaymentByMobile", new object[] {
                        companyCode,
                        shopCode,
                        sequenceNo,
                        uniqueNo,
                        totalPaymentFee,
                        mobileCompany,
                        saleAmount,
                        goodName,
                        playDate,
                        customerSSN,
                        customerName,
                        customerId,
                        eMail,
                        mobileNo,
                        workId,
                        participationNo,
                        terminalCode,
                        saleCount,
                        sendMail,
                        approvalType,
                        serverIp,
                        serverPort,
                        cardSequenceNo,
                        mobileId,
                        authenticationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BookPaymentByMobileAsync(
                    string companyCode, 
                    string shopCode, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    string mobileCompany, 
                    int saleAmount, 
                    string goodName, 
                    string playDate, 
                    string customerSSN, 
                    string customerName, 
                    string customerId, 
                    string eMail, 
                    string mobileNo, 
                    string workId, 
                    string participationNo, 
                    string terminalCode, 
                    int saleCount, 
                    bool sendMail, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort, 
                    string cardSequenceNo, 
                    string mobileId, 
                    string authenticationNo) {
            this.BookPaymentByMobileAsync(companyCode, shopCode, sequenceNo, uniqueNo, totalPaymentFee, mobileCompany, saleAmount, goodName, playDate, customerSSN, customerName, customerId, eMail, mobileNo, workId, participationNo, terminalCode, saleCount, sendMail, approvalType, serverIp, serverPort, cardSequenceNo, mobileId, authenticationNo, null);
        }
        
        /// <remarks/>
        public void BookPaymentByMobileAsync(
                    string companyCode, 
                    string shopCode, 
                    string sequenceNo, 
                    string uniqueNo, 
                    int totalPaymentFee, 
                    string mobileCompany, 
                    int saleAmount, 
                    string goodName, 
                    string playDate, 
                    string customerSSN, 
                    string customerName, 
                    string customerId, 
                    string eMail, 
                    string mobileNo, 
                    string workId, 
                    string participationNo, 
                    string terminalCode, 
                    int saleCount, 
                    bool sendMail, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort, 
                    string cardSequenceNo, 
                    string mobileId, 
                    string authenticationNo, 
                    object userState) {
            if ((this.BookPaymentByMobileOperationCompleted == null)) {
                this.BookPaymentByMobileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookPaymentByMobileOperationCompleted);
            }
            this.InvokeAsync("BookPaymentByMobile", new object[] {
                        companyCode,
                        shopCode,
                        sequenceNo,
                        uniqueNo,
                        totalPaymentFee,
                        mobileCompany,
                        saleAmount,
                        goodName,
                        playDate,
                        customerSSN,
                        customerName,
                        customerId,
                        eMail,
                        mobileNo,
                        workId,
                        participationNo,
                        terminalCode,
                        saleCount,
                        sendMail,
                        approvalType,
                        serverIp,
                        serverPort,
                        cardSequenceNo,
                        mobileId,
                        authenticationNo}, this.BookPaymentByMobileOperationCompleted, userState);
        }
        
        private void OnBookPaymentByMobileOperationCompleted(object arg) {
            if ((this.BookPaymentByMobileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookPaymentByMobileCompleted(this, new BookPaymentByMobileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BookAfterApprovalCashSave", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BookAfterApprovalCashSave(string requestCardSequenceNo, string cashSaveCode, string cashSaveData, string cashSaveType, int saleAmount, string workId, string participationNo, string terminalCode, string inputMethod, string playDate, string approvalType, string serverIp, int serverPort) {
            object[] results = this.Invoke("BookAfterApprovalCashSave", new object[] {
                        requestCardSequenceNo,
                        cashSaveCode,
                        cashSaveData,
                        cashSaveType,
                        saleAmount,
                        workId,
                        participationNo,
                        terminalCode,
                        inputMethod,
                        playDate,
                        approvalType,
                        serverIp,
                        serverPort});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BookAfterApprovalCashSaveAsync(string requestCardSequenceNo, string cashSaveCode, string cashSaveData, string cashSaveType, int saleAmount, string workId, string participationNo, string terminalCode, string inputMethod, string playDate, string approvalType, string serverIp, int serverPort) {
            this.BookAfterApprovalCashSaveAsync(requestCardSequenceNo, cashSaveCode, cashSaveData, cashSaveType, saleAmount, workId, participationNo, terminalCode, inputMethod, playDate, approvalType, serverIp, serverPort, null);
        }
        
        /// <remarks/>
        public void BookAfterApprovalCashSaveAsync(string requestCardSequenceNo, string cashSaveCode, string cashSaveData, string cashSaveType, int saleAmount, string workId, string participationNo, string terminalCode, string inputMethod, string playDate, string approvalType, string serverIp, int serverPort, object userState) {
            if ((this.BookAfterApprovalCashSaveOperationCompleted == null)) {
                this.BookAfterApprovalCashSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookAfterApprovalCashSaveOperationCompleted);
            }
            this.InvokeAsync("BookAfterApprovalCashSave", new object[] {
                        requestCardSequenceNo,
                        cashSaveCode,
                        cashSaveData,
                        cashSaveType,
                        saleAmount,
                        workId,
                        participationNo,
                        terminalCode,
                        inputMethod,
                        playDate,
                        approvalType,
                        serverIp,
                        serverPort}, this.BookAfterApprovalCashSaveOperationCompleted, userState);
        }
        
        private void OnBookAfterApprovalCashSaveOperationCompleted(object arg) {
            if ((this.BookAfterApprovalCashSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookAfterApprovalCashSaveCompleted(this, new BookAfterApprovalCashSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthenticationMobilePayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuthenticationMobilePayment(
                    string mobileCompany, 
                    int saleAmount, 
                    string goodName, 
                    string playDate, 
                    string customerSSN, 
                    string customerName, 
                    string customerId, 
                    string eMail, 
                    string mobileNo, 
                    string workId, 
                    string participationNo, 
                    string terminalCode, 
                    int saleCount, 
                    bool sendMail, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort) {
            object[] results = this.Invoke("AuthenticationMobilePayment", new object[] {
                        mobileCompany,
                        saleAmount,
                        goodName,
                        playDate,
                        customerSSN,
                        customerName,
                        customerId,
                        eMail,
                        mobileNo,
                        workId,
                        participationNo,
                        terminalCode,
                        saleCount,
                        sendMail,
                        approvalType,
                        serverIp,
                        serverPort});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticationMobilePaymentAsync(
                    string mobileCompany, 
                    int saleAmount, 
                    string goodName, 
                    string playDate, 
                    string customerSSN, 
                    string customerName, 
                    string customerId, 
                    string eMail, 
                    string mobileNo, 
                    string workId, 
                    string participationNo, 
                    string terminalCode, 
                    int saleCount, 
                    bool sendMail, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort) {
            this.AuthenticationMobilePaymentAsync(mobileCompany, saleAmount, goodName, playDate, customerSSN, customerName, customerId, eMail, mobileNo, workId, participationNo, terminalCode, saleCount, sendMail, approvalType, serverIp, serverPort, null);
        }
        
        /// <remarks/>
        public void AuthenticationMobilePaymentAsync(
                    string mobileCompany, 
                    int saleAmount, 
                    string goodName, 
                    string playDate, 
                    string customerSSN, 
                    string customerName, 
                    string customerId, 
                    string eMail, 
                    string mobileNo, 
                    string workId, 
                    string participationNo, 
                    string terminalCode, 
                    int saleCount, 
                    bool sendMail, 
                    string approvalType, 
                    string serverIp, 
                    int serverPort, 
                    object userState) {
            if ((this.AuthenticationMobilePaymentOperationCompleted == null)) {
                this.AuthenticationMobilePaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticationMobilePaymentOperationCompleted);
            }
            this.InvokeAsync("AuthenticationMobilePayment", new object[] {
                        mobileCompany,
                        saleAmount,
                        goodName,
                        playDate,
                        customerSSN,
                        customerName,
                        customerId,
                        eMail,
                        mobileNo,
                        workId,
                        participationNo,
                        terminalCode,
                        saleCount,
                        sendMail,
                        approvalType,
                        serverIp,
                        serverPort}, this.AuthenticationMobilePaymentOperationCompleted, userState);
        }
        
        private void OnAuthenticationMobilePaymentOperationCompleted(object arg) {
            if ((this.AuthenticationMobilePaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticationMobilePaymentCompleted(this, new AuthenticationMobilePaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBookRefunded", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBookRefunded(string companyCode, string shopCode, string bookNo) {
            object[] results = this.Invoke("GetBookRefunded", new object[] {
                        companyCode,
                        shopCode,
                        bookNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBookRefundedAsync(string companyCode, string shopCode, string bookNo) {
            this.GetBookRefundedAsync(companyCode, shopCode, bookNo, null);
        }
        
        /// <remarks/>
        public void GetBookRefundedAsync(string companyCode, string shopCode, string bookNo, object userState) {
            if ((this.GetBookRefundedOperationCompleted == null)) {
                this.GetBookRefundedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBookRefundedOperationCompleted);
            }
            this.InvokeAsync("GetBookRefunded", new object[] {
                        companyCode,
                        shopCode,
                        bookNo}, this.GetBookRefundedOperationCompleted, userState);
        }
        
        private void OnGetBookRefundedOperationCompleted(object arg) {
            if ((this.GetBookRefundedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBookRefundedCompleted(this, new GetBookRefundedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MobileCertification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileCertification(string companyCode, string shopCode, string participationNo, string mobileCompany, string customerName, string customerSSN, string mobileNo, string certificationNo, string serverIp, int serverPort, bool firstSend) {
            object[] results = this.Invoke("MobileCertification", new object[] {
                        companyCode,
                        shopCode,
                        participationNo,
                        mobileCompany,
                        customerName,
                        customerSSN,
                        mobileNo,
                        certificationNo,
                        serverIp,
                        serverPort,
                        firstSend});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileCertificationAsync(string companyCode, string shopCode, string participationNo, string mobileCompany, string customerName, string customerSSN, string mobileNo, string certificationNo, string serverIp, int serverPort, bool firstSend) {
            this.MobileCertificationAsync(companyCode, shopCode, participationNo, mobileCompany, customerName, customerSSN, mobileNo, certificationNo, serverIp, serverPort, firstSend, null);
        }
        
        /// <remarks/>
        public void MobileCertificationAsync(string companyCode, string shopCode, string participationNo, string mobileCompany, string customerName, string customerSSN, string mobileNo, string certificationNo, string serverIp, int serverPort, bool firstSend, object userState) {
            if ((this.MobileCertificationOperationCompleted == null)) {
                this.MobileCertificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileCertificationOperationCompleted);
            }
            this.InvokeAsync("MobileCertification", new object[] {
                        companyCode,
                        shopCode,
                        participationNo,
                        mobileCompany,
                        customerName,
                        customerSSN,
                        mobileNo,
                        certificationNo,
                        serverIp,
                        serverPort,
                        firstSend}, this.MobileCertificationOperationCompleted, userState);
        }
        
        private void OnMobileCertificationOperationCompleted(object arg) {
            if ((this.MobileCertificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileCertificationCompleted(this, new MobileCertificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveMemberCertification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveMemberCertification(string companyCode, string shopCode, string customerName, string mobileNo, string errorCode, string errorMessage1, string certificationCode, string ortherSequenceNo, string ipinNo) {
            object[] results = this.Invoke("SaveMemberCertification", new object[] {
                        companyCode,
                        shopCode,
                        customerName,
                        mobileNo,
                        errorCode,
                        errorMessage1,
                        certificationCode,
                        ortherSequenceNo,
                        ipinNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveMemberCertificationAsync(string companyCode, string shopCode, string customerName, string mobileNo, string errorCode, string errorMessage1, string certificationCode, string ortherSequenceNo, string ipinNo) {
            this.SaveMemberCertificationAsync(companyCode, shopCode, customerName, mobileNo, errorCode, errorMessage1, certificationCode, ortherSequenceNo, ipinNo, null);
        }
        
        /// <remarks/>
        public void SaveMemberCertificationAsync(string companyCode, string shopCode, string customerName, string mobileNo, string errorCode, string errorMessage1, string certificationCode, string ortherSequenceNo, string ipinNo, object userState) {
            if ((this.SaveMemberCertificationOperationCompleted == null)) {
                this.SaveMemberCertificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMemberCertificationOperationCompleted);
            }
            this.InvokeAsync("SaveMemberCertification", new object[] {
                        companyCode,
                        shopCode,
                        customerName,
                        mobileNo,
                        errorCode,
                        errorMessage1,
                        certificationCode,
                        ortherSequenceNo,
                        ipinNo}, this.SaveMemberCertificationOperationCompleted, userState);
        }
        
        private void OnSaveMemberCertificationOperationCompleted(object arg) {
            if ((this.SaveMemberCertificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMemberCertificationCompleted(this, new SaveMemberCertificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RealNameCertification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RealNameCertification(string companyCode, string shopCode, string customerName, string customerSSN) {
            object[] results = this.Invoke("RealNameCertification", new object[] {
                        companyCode,
                        shopCode,
                        customerName,
                        customerSSN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RealNameCertificationAsync(string companyCode, string shopCode, string customerName, string customerSSN) {
            this.RealNameCertificationAsync(companyCode, shopCode, customerName, customerSSN, null);
        }
        
        /// <remarks/>
        public void RealNameCertificationAsync(string companyCode, string shopCode, string customerName, string customerSSN, object userState) {
            if ((this.RealNameCertificationOperationCompleted == null)) {
                this.RealNameCertificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRealNameCertificationOperationCompleted);
            }
            this.InvokeAsync("RealNameCertification", new object[] {
                        companyCode,
                        shopCode,
                        customerName,
                        customerSSN}, this.RealNameCertificationOperationCompleted, userState);
        }
        
        private void OnRealNameCertificationOperationCompleted(object arg) {
            if ((this.RealNameCertificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RealNameCertificationCompleted(this, new RealNameCertificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RealNameCertificationOther", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RealNameCertificationOther(string customerName, string customerSSN) {
            object[] results = this.Invoke("RealNameCertificationOther", new object[] {
                        customerName,
                        customerSSN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RealNameCertificationOtherAsync(string customerName, string customerSSN) {
            this.RealNameCertificationOtherAsync(customerName, customerSSN, null);
        }
        
        /// <remarks/>
        public void RealNameCertificationOtherAsync(string customerName, string customerSSN, object userState) {
            if ((this.RealNameCertificationOtherOperationCompleted == null)) {
                this.RealNameCertificationOtherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRealNameCertificationOtherOperationCompleted);
            }
            this.InvokeAsync("RealNameCertificationOther", new object[] {
                        customerName,
                        customerSSN}, this.RealNameCertificationOtherOperationCompleted, userState);
        }
        
        private void OnRealNameCertificationOtherOperationCompleted(object arg) {
            if ((this.RealNameCertificationOtherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RealNameCertificationOtherCompleted(this, new RealNameCertificationOtherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberIdCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemberIdCheck(string companyCode, string loginId) {
            object[] results = this.Invoke("GetMemberIdCheck", new object[] {
                        companyCode,
                        loginId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberIdCheckAsync(string companyCode, string loginId) {
            this.GetMemberIdCheckAsync(companyCode, loginId, null);
        }
        
        /// <remarks/>
        public void GetMemberIdCheckAsync(string companyCode, string loginId, object userState) {
            if ((this.GetMemberIdCheckOperationCompleted == null)) {
                this.GetMemberIdCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberIdCheckOperationCompleted);
            }
            this.InvokeAsync("GetMemberIdCheck", new object[] {
                        companyCode,
                        loginId}, this.GetMemberIdCheckOperationCompleted, userState);
        }
        
        private void OnGetMemberIdCheckOperationCompleted(object arg) {
            if ((this.GetMemberIdCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberIdCheckCompleted(this, new GetMemberIdCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MemberJoin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MemberJoin(string companyCode, string loginId, string passWord, string memberName, string memberSSN, string memberEmail, string mobileNo, string telephoneNo, string postalCode, string address1, string address2, string emailSendYn, string smsSendYn, string memberKindCode, string workId) {
            object[] results = this.Invoke("MemberJoin", new object[] {
                        companyCode,
                        loginId,
                        passWord,
                        memberName,
                        memberSSN,
                        memberEmail,
                        mobileNo,
                        telephoneNo,
                        postalCode,
                        address1,
                        address2,
                        emailSendYn,
                        smsSendYn,
                        memberKindCode,
                        workId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MemberJoinAsync(string companyCode, string loginId, string passWord, string memberName, string memberSSN, string memberEmail, string mobileNo, string telephoneNo, string postalCode, string address1, string address2, string emailSendYn, string smsSendYn, string memberKindCode, string workId) {
            this.MemberJoinAsync(companyCode, loginId, passWord, memberName, memberSSN, memberEmail, mobileNo, telephoneNo, postalCode, address1, address2, emailSendYn, smsSendYn, memberKindCode, workId, null);
        }
        
        /// <remarks/>
        public void MemberJoinAsync(
                    string companyCode, 
                    string loginId, 
                    string passWord, 
                    string memberName, 
                    string memberSSN, 
                    string memberEmail, 
                    string mobileNo, 
                    string telephoneNo, 
                    string postalCode, 
                    string address1, 
                    string address2, 
                    string emailSendYn, 
                    string smsSendYn, 
                    string memberKindCode, 
                    string workId, 
                    object userState) {
            if ((this.MemberJoinOperationCompleted == null)) {
                this.MemberJoinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMemberJoinOperationCompleted);
            }
            this.InvokeAsync("MemberJoin", new object[] {
                        companyCode,
                        loginId,
                        passWord,
                        memberName,
                        memberSSN,
                        memberEmail,
                        mobileNo,
                        telephoneNo,
                        postalCode,
                        address1,
                        address2,
                        emailSendYn,
                        smsSendYn,
                        memberKindCode,
                        workId}, this.MemberJoinOperationCompleted, userState);
        }
        
        private void OnMemberJoinOperationCompleted(object arg) {
            if ((this.MemberJoinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MemberJoinCompleted(this, new MemberJoinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MemberJoinByIPin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MemberJoinByIPin(
                    string companyCode, 
                    string loginId, 
                    string passWord, 
                    string memberName, 
                    string memberSSN, 
                    string memberEmail, 
                    string mobileNo, 
                    string telephoneNo, 
                    string postalCode, 
                    string address1, 
                    string address2, 
                    string emailSendYn, 
                    string smsSendYn, 
                    string memberKindCode, 
                    string workId, 
                    string certificationCode, 
                    string ipinNo) {
            object[] results = this.Invoke("MemberJoinByIPin", new object[] {
                        companyCode,
                        loginId,
                        passWord,
                        memberName,
                        memberSSN,
                        memberEmail,
                        mobileNo,
                        telephoneNo,
                        postalCode,
                        address1,
                        address2,
                        emailSendYn,
                        smsSendYn,
                        memberKindCode,
                        workId,
                        certificationCode,
                        ipinNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MemberJoinByIPinAsync(
                    string companyCode, 
                    string loginId, 
                    string passWord, 
                    string memberName, 
                    string memberSSN, 
                    string memberEmail, 
                    string mobileNo, 
                    string telephoneNo, 
                    string postalCode, 
                    string address1, 
                    string address2, 
                    string emailSendYn, 
                    string smsSendYn, 
                    string memberKindCode, 
                    string workId, 
                    string certificationCode, 
                    string ipinNo) {
            this.MemberJoinByIPinAsync(companyCode, loginId, passWord, memberName, memberSSN, memberEmail, mobileNo, telephoneNo, postalCode, address1, address2, emailSendYn, smsSendYn, memberKindCode, workId, certificationCode, ipinNo, null);
        }
        
        /// <remarks/>
        public void MemberJoinByIPinAsync(
                    string companyCode, 
                    string loginId, 
                    string passWord, 
                    string memberName, 
                    string memberSSN, 
                    string memberEmail, 
                    string mobileNo, 
                    string telephoneNo, 
                    string postalCode, 
                    string address1, 
                    string address2, 
                    string emailSendYn, 
                    string smsSendYn, 
                    string memberKindCode, 
                    string workId, 
                    string certificationCode, 
                    string ipinNo, 
                    object userState) {
            if ((this.MemberJoinByIPinOperationCompleted == null)) {
                this.MemberJoinByIPinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMemberJoinByIPinOperationCompleted);
            }
            this.InvokeAsync("MemberJoinByIPin", new object[] {
                        companyCode,
                        loginId,
                        passWord,
                        memberName,
                        memberSSN,
                        memberEmail,
                        mobileNo,
                        telephoneNo,
                        postalCode,
                        address1,
                        address2,
                        emailSendYn,
                        smsSendYn,
                        memberKindCode,
                        workId,
                        certificationCode,
                        ipinNo}, this.MemberJoinByIPinOperationCompleted, userState);
        }
        
        private void OnMemberJoinByIPinOperationCompleted(object arg) {
            if ((this.MemberJoinByIPinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MemberJoinByIPinCompleted(this, new MemberJoinByIPinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberExistsByMobileNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemberExistsByMobileNo(string companyCode, string mobileNo) {
            object[] results = this.Invoke("GetMemberExistsByMobileNo", new object[] {
                        companyCode,
                        mobileNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberExistsByMobileNoAsync(string companyCode, string mobileNo) {
            this.GetMemberExistsByMobileNoAsync(companyCode, mobileNo, null);
        }
        
        /// <remarks/>
        public void GetMemberExistsByMobileNoAsync(string companyCode, string mobileNo, object userState) {
            if ((this.GetMemberExistsByMobileNoOperationCompleted == null)) {
                this.GetMemberExistsByMobileNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberExistsByMobileNoOperationCompleted);
            }
            this.InvokeAsync("GetMemberExistsByMobileNo", new object[] {
                        companyCode,
                        mobileNo}, this.GetMemberExistsByMobileNoOperationCompleted, userState);
        }
        
        private void OnGetMemberExistsByMobileNoOperationCompleted(object arg) {
            if ((this.GetMemberExistsByMobileNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberExistsByMobileNoCompleted(this, new GetMemberExistsByMobileNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberExists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemberExists(string companyCode, string memberName, string memberSSN) {
            object[] results = this.Invoke("GetMemberExists", new object[] {
                        companyCode,
                        memberName,
                        memberSSN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberExistsAsync(string companyCode, string memberName, string memberSSN) {
            this.GetMemberExistsAsync(companyCode, memberName, memberSSN, null);
        }
        
        /// <remarks/>
        public void GetMemberExistsAsync(string companyCode, string memberName, string memberSSN, object userState) {
            if ((this.GetMemberExistsOperationCompleted == null)) {
                this.GetMemberExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberExistsOperationCompleted);
            }
            this.InvokeAsync("GetMemberExists", new object[] {
                        companyCode,
                        memberName,
                        memberSSN}, this.GetMemberExistsOperationCompleted, userState);
        }
        
        private void OnGetMemberExistsOperationCompleted(object arg) {
            if ((this.GetMemberExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberExistsCompleted(this, new GetMemberExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberIdByMobileNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemberIdByMobileNo(string companyCode, string memberName, string mobileNo) {
            object[] results = this.Invoke("GetMemberIdByMobileNo", new object[] {
                        companyCode,
                        memberName,
                        mobileNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberIdByMobileNoAsync(string companyCode, string memberName, string mobileNo) {
            this.GetMemberIdByMobileNoAsync(companyCode, memberName, mobileNo, null);
        }
        
        /// <remarks/>
        public void GetMemberIdByMobileNoAsync(string companyCode, string memberName, string mobileNo, object userState) {
            if ((this.GetMemberIdByMobileNoOperationCompleted == null)) {
                this.GetMemberIdByMobileNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberIdByMobileNoOperationCompleted);
            }
            this.InvokeAsync("GetMemberIdByMobileNo", new object[] {
                        companyCode,
                        memberName,
                        mobileNo}, this.GetMemberIdByMobileNoOperationCompleted, userState);
        }
        
        private void OnGetMemberIdByMobileNoOperationCompleted(object arg) {
            if ((this.GetMemberIdByMobileNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberIdByMobileNoCompleted(this, new GetMemberIdByMobileNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemberPassword(string companyCode, string memberId, string memberName) {
            object[] results = this.Invoke("GetMemberPassword", new object[] {
                        companyCode,
                        memberId,
                        memberName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberPasswordAsync(string companyCode, string memberId, string memberName) {
            this.GetMemberPasswordAsync(companyCode, memberId, memberName, null);
        }
        
        /// <remarks/>
        public void GetMemberPasswordAsync(string companyCode, string memberId, string memberName, object userState) {
            if ((this.GetMemberPasswordOperationCompleted == null)) {
                this.GetMemberPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberPasswordOperationCompleted);
            }
            this.InvokeAsync("GetMemberPassword", new object[] {
                        companyCode,
                        memberId,
                        memberName}, this.GetMemberPasswordOperationCompleted, userState);
        }
        
        private void OnGetMemberPasswordOperationCompleted(object arg) {
            if ((this.GetMemberPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberPasswordCompleted(this, new GetMemberPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMemberPw", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMemberPw(string companyCode, string shopCode, string password, string memberEMail) {
            object[] results = this.Invoke("SendMemberPw", new object[] {
                        companyCode,
                        shopCode,
                        password,
                        memberEMail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMemberPwAsync(string companyCode, string shopCode, string password, string memberEMail) {
            this.SendMemberPwAsync(companyCode, shopCode, password, memberEMail, null);
        }
        
        /// <remarks/>
        public void SendMemberPwAsync(string companyCode, string shopCode, string password, string memberEMail, object userState) {
            if ((this.SendMemberPwOperationCompleted == null)) {
                this.SendMemberPwOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMemberPwOperationCompleted);
            }
            this.InvokeAsync("SendMemberPw", new object[] {
                        companyCode,
                        shopCode,
                        password,
                        memberEMail}, this.SendMemberPwOperationCompleted, userState);
        }
        
        private void OnSendMemberPwOperationCompleted(object arg) {
            if ((this.SendMemberPwCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMemberPwCompleted(this, new SendMemberPwCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCardSequenceNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCardSequenceNo() {
            object[] results = this.Invoke("GetCardSequenceNo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCardSequenceNoAsync() {
            this.GetCardSequenceNoAsync(null);
        }
        
        /// <remarks/>
        public void GetCardSequenceNoAsync(object userState) {
            if ((this.GetCardSequenceNoOperationCompleted == null)) {
                this.GetCardSequenceNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardSequenceNoOperationCompleted);
            }
            this.InvokeAsync("GetCardSequenceNo", new object[0], this.GetCardSequenceNoOperationCompleted, userState);
        }
        
        private void OnGetCardSequenceNoOperationCompleted(object arg) {
            if ((this.GetCardSequenceNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardSequenceNoCompleted(this, new GetCardSequenceNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveMemberByWithdraw", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveMemberByWithdraw(string companyCode, string memberCode, string memberSSN) {
            object[] results = this.Invoke("SaveMemberByWithdraw", new object[] {
                        companyCode,
                        memberCode,
                        memberSSN});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveMemberByWithdrawAsync(string companyCode, string memberCode, string memberSSN) {
            this.SaveMemberByWithdrawAsync(companyCode, memberCode, memberSSN, null);
        }
        
        /// <remarks/>
        public void SaveMemberByWithdrawAsync(string companyCode, string memberCode, string memberSSN, object userState) {
            if ((this.SaveMemberByWithdrawOperationCompleted == null)) {
                this.SaveMemberByWithdrawOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMemberByWithdrawOperationCompleted);
            }
            this.InvokeAsync("SaveMemberByWithdraw", new object[] {
                        companyCode,
                        memberCode,
                        memberSSN}, this.SaveMemberByWithdrawOperationCompleted, userState);
        }
        
        private void OnSaveMemberByWithdrawOperationCompleted(object arg) {
            if ((this.SaveMemberByWithdrawCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMemberByWithdrawCompleted(this, new SaveMemberByWithdrawCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveMemberByEdit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveMemberByEdit(string companyCode, string memberCode, string memberEmail, string mobileNo, string telephoneNo, string postalCode, string address1, string address2, string emailSendYn, string smsSendYn, string password, string updateId) {
            object[] results = this.Invoke("SaveMemberByEdit", new object[] {
                        companyCode,
                        memberCode,
                        memberEmail,
                        mobileNo,
                        telephoneNo,
                        postalCode,
                        address1,
                        address2,
                        emailSendYn,
                        smsSendYn,
                        password,
                        updateId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveMemberByEditAsync(string companyCode, string memberCode, string memberEmail, string mobileNo, string telephoneNo, string postalCode, string address1, string address2, string emailSendYn, string smsSendYn, string password, string updateId) {
            this.SaveMemberByEditAsync(companyCode, memberCode, memberEmail, mobileNo, telephoneNo, postalCode, address1, address2, emailSendYn, smsSendYn, password, updateId, null);
        }
        
        /// <remarks/>
        public void SaveMemberByEditAsync(string companyCode, string memberCode, string memberEmail, string mobileNo, string telephoneNo, string postalCode, string address1, string address2, string emailSendYn, string smsSendYn, string password, string updateId, object userState) {
            if ((this.SaveMemberByEditOperationCompleted == null)) {
                this.SaveMemberByEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMemberByEditOperationCompleted);
            }
            this.InvokeAsync("SaveMemberByEdit", new object[] {
                        companyCode,
                        memberCode,
                        memberEmail,
                        mobileNo,
                        telephoneNo,
                        postalCode,
                        address1,
                        address2,
                        emailSendYn,
                        smsSendYn,
                        password,
                        updateId}, this.SaveMemberByEditOperationCompleted, userState);
        }
        
        private void OnSaveMemberByEditOperationCompleted(object arg) {
            if ((this.SaveMemberByEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMemberByEditCompleted(this, new SaveMemberByEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMember", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMember(string companyCode, string memberCode) {
            object[] results = this.Invoke("GetMember", new object[] {
                        companyCode,
                        memberCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberAsync(string companyCode, string memberCode) {
            this.GetMemberAsync(companyCode, memberCode, null);
        }
        
        /// <remarks/>
        public void GetMemberAsync(string companyCode, string memberCode, object userState) {
            if ((this.GetMemberOperationCompleted == null)) {
                this.GetMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberOperationCompleted);
            }
            this.InvokeAsync("GetMember", new object[] {
                        companyCode,
                        memberCode}, this.GetMemberOperationCompleted, userState);
        }
        
        private void OnGetMemberOperationCompleted(object arg) {
            if ((this.GetMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberCompleted(this, new GetMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDrawEndDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDrawEndDate(string companyCode, string shopCode) {
            object[] results = this.Invoke("GetDrawEndDate", new object[] {
                        companyCode,
                        shopCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDrawEndDateAsync(string companyCode, string shopCode) {
            this.GetDrawEndDateAsync(companyCode, shopCode, null);
        }
        
        /// <remarks/>
        public void GetDrawEndDateAsync(string companyCode, string shopCode, object userState) {
            if ((this.GetDrawEndDateOperationCompleted == null)) {
                this.GetDrawEndDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrawEndDateOperationCompleted);
            }
            this.InvokeAsync("GetDrawEndDate", new object[] {
                        companyCode,
                        shopCode}, this.GetDrawEndDateOperationCompleted, userState);
        }
        
        private void OnGetDrawEndDateOperationCompleted(object arg) {
            if ((this.GetDrawEndDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrawEndDateCompleted(this, new GetDrawEndDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProductGroup {
        
        private string groupCodeField;
        
        private string groupNameField;
        
        private string groupKindField;
        
        private int bookLimitCountField;
        
        /// <remarks/>
        public string GroupCode {
            get {
                return this.groupCodeField;
            }
            set {
                this.groupCodeField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public string GroupKind {
            get {
                return this.groupKindField;
            }
            set {
                this.groupKindField = value;
            }
        }
        
        /// <remarks/>
        public int BookLimitCount {
            get {
                return this.bookLimitCountField;
            }
            set {
                this.bookLimitCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Product {
        
        private string groupCodeField;
        
        private string groupNameField;
        
        private string groupKindField;
        
        private string productCodeField;
        
        private string productNameField;
        
        private int productFeeField;
        
        private int productDiscountFeeField;
        
        private int productPremiumFeeField;
        
        private int entranceLimitField;
        
        private int sizeField;
        
        private int maxSaleCountField;
        
        private string remarkField;
        
        private string imageUrlField;
        
        private string thumbnailUrlField;
        
        private string windowUrlField;
        
        /// <remarks/>
        public string GroupCode {
            get {
                return this.groupCodeField;
            }
            set {
                this.groupCodeField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public string GroupKind {
            get {
                return this.groupKindField;
            }
            set {
                this.groupKindField = value;
            }
        }
        
        /// <remarks/>
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public int ProductFee {
            get {
                return this.productFeeField;
            }
            set {
                this.productFeeField = value;
            }
        }
        
        /// <remarks/>
        public int ProductDiscountFee {
            get {
                return this.productDiscountFeeField;
            }
            set {
                this.productDiscountFeeField = value;
            }
        }
        
        /// <remarks/>
        public int ProductPremiumFee {
            get {
                return this.productPremiumFeeField;
            }
            set {
                this.productPremiumFeeField = value;
            }
        }
        
        /// <remarks/>
        public int EntranceLimit {
            get {
                return this.entranceLimitField;
            }
            set {
                this.entranceLimitField = value;
            }
        }
        
        /// <remarks/>
        public int Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public int MaxSaleCount {
            get {
                return this.maxSaleCountField;
            }
            set {
                this.maxSaleCountField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public string ImageUrl {
            get {
                return this.imageUrlField;
            }
            set {
                this.imageUrlField = value;
            }
        }
        
        /// <remarks/>
        public string ThumbnailUrl {
            get {
                return this.thumbnailUrlField;
            }
            set {
                this.thumbnailUrlField = value;
            }
        }
        
        /// <remarks/>
        public string WindowUrl {
            get {
                return this.windowUrlField;
            }
            set {
                this.windowUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProductImage {
        
        private string productCodeField;
        
        private string groupCodeField;
        
        private string imageUrlField;
        
        private string thumbnailUrlField;
        
        private string windowUrlField;
        
        /// <remarks/>
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        public string GroupCode {
            get {
                return this.groupCodeField;
            }
            set {
                this.groupCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ImageUrl {
            get {
                return this.imageUrlField;
            }
            set {
                this.imageUrlField = value;
            }
        }
        
        /// <remarks/>
        public string ThumbnailUrl {
            get {
                return this.thumbnailUrlField;
            }
            set {
                this.thumbnailUrlField = value;
            }
        }
        
        /// <remarks/>
        public string WindowUrl {
            get {
                return this.windowUrlField;
            }
            set {
                this.windowUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Schedule {
        
        private string playDateField;
        
        private string playDaysField;
        
        private int totalCountField;
        
        private int remainCountField;
        
        private string statusCodeField;
        
        private string imageUrlField;
        
        private int productFeeField;
        
        private string discountYnField;
        
        private string premiumYnField;
        
        private int playSequenceField;
        
        /// <remarks/>
        public string PlayDate {
            get {
                return this.playDateField;
            }
            set {
                this.playDateField = value;
            }
        }
        
        /// <remarks/>
        public string PlayDays {
            get {
                return this.playDaysField;
            }
            set {
                this.playDaysField = value;
            }
        }
        
        /// <remarks/>
        public int TotalCount {
            get {
                return this.totalCountField;
            }
            set {
                this.totalCountField = value;
            }
        }
        
        /// <remarks/>
        public int RemainCount {
            get {
                return this.remainCountField;
            }
            set {
                this.remainCountField = value;
            }
        }
        
        /// <remarks/>
        public string StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ImageUrl {
            get {
                return this.imageUrlField;
            }
            set {
                this.imageUrlField = value;
            }
        }
        
        /// <remarks/>
        public int ProductFee {
            get {
                return this.productFeeField;
            }
            set {
                this.productFeeField = value;
            }
        }
        
        /// <remarks/>
        public string DiscountYn {
            get {
                return this.discountYnField;
            }
            set {
                this.discountYnField = value;
            }
        }
        
        /// <remarks/>
        public string PremiumYn {
            get {
                return this.premiumYnField;
            }
            set {
                this.premiumYnField = value;
            }
        }
        
        /// <remarks/>
        public int PlaySequence {
            get {
                return this.playSequenceField;
            }
            set {
                this.playSequenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ScheduleTime {
        
        private string playDateField;
        
        private string playDaysField;
        
        private string startTimeField;
        
        private string endTimeField;
        
        private int totalCountField;
        
        private int remainCountField;
        
        private string statusCodeField;
        
        private string imageUrlField;
        
        private int productFeeField;
        
        private string discountYnField;
        
        private string premiumYnField;
        
        private int playSequenceField;
        
        /// <remarks/>
        public string PlayDate {
            get {
                return this.playDateField;
            }
            set {
                this.playDateField = value;
            }
        }
        
        /// <remarks/>
        public string PlayDays {
            get {
                return this.playDaysField;
            }
            set {
                this.playDaysField = value;
            }
        }
        
        /// <remarks/>
        public string StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public string EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public int TotalCount {
            get {
                return this.totalCountField;
            }
            set {
                this.totalCountField = value;
            }
        }
        
        /// <remarks/>
        public int RemainCount {
            get {
                return this.remainCountField;
            }
            set {
                this.remainCountField = value;
            }
        }
        
        /// <remarks/>
        public string StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ImageUrl {
            get {
                return this.imageUrlField;
            }
            set {
                this.imageUrlField = value;
            }
        }
        
        /// <remarks/>
        public int ProductFee {
            get {
                return this.productFeeField;
            }
            set {
                this.productFeeField = value;
            }
        }
        
        /// <remarks/>
        public string DiscountYn {
            get {
                return this.discountYnField;
            }
            set {
                this.discountYnField = value;
            }
        }
        
        /// <remarks/>
        public string PremiumYn {
            get {
                return this.premiumYnField;
            }
            set {
                this.premiumYnField = value;
            }
        }
        
        /// <remarks/>
        public int PlaySequence {
            get {
                return this.playSequenceField;
            }
            set {
                this.playSequenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ScheduleGroup {
        
        private string groupCodeField;
        
        private string groupNameField;
        
        private string playDateField;
        
        private string playDaysField;
        
        private int productRemainCountField;
        
        private string groupKindField;
        
        private int maxSaleCountField;
        
        /// <remarks/>
        public string GroupCode {
            get {
                return this.groupCodeField;
            }
            set {
                this.groupCodeField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public string PlayDate {
            get {
                return this.playDateField;
            }
            set {
                this.playDateField = value;
            }
        }
        
        /// <remarks/>
        public string PlayDays {
            get {
                return this.playDaysField;
            }
            set {
                this.playDaysField = value;
            }
        }
        
        /// <remarks/>
        public int ProductRemainCount {
            get {
                return this.productRemainCountField;
            }
            set {
                this.productRemainCountField = value;
            }
        }
        
        /// <remarks/>
        public string GroupKind {
            get {
                return this.groupKindField;
            }
            set {
                this.groupKindField = value;
            }
        }
        
        /// <remarks/>
        public int MaxSaleCount {
            get {
                return this.maxSaleCountField;
            }
            set {
                this.maxSaleCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Common {
        
        private string commonCodeField;
        
        private string commonNameField;
        
        /// <remarks/>
        public string CommonCode {
            get {
                return this.commonCodeField;
            }
            set {
                this.commonCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CommonName {
            get {
                return this.commonNameField;
            }
            set {
                this.commonNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MyPage {
        
        private string bookNoField;
        
        private string customerNameField;
        
        private string productCodeField;
        
        private string groupNameField;
        
        private string productNameField;
        
        private string thumbnailUrlField;
        
        private string bookDateField;
        
        private string startDateField;
        
        private string endDateField;
        
        private int totalAmountField;
        
        private string bookStatusField;
        
        private int depositAmountField;
        
        private string depositStatusField;
        
        private string customerSSNField;
        
        private int balanceAmountField;
        
        private string customerTelephoneNoField;
        
        private string customerMobileNoField;
        
        private string bankAccountField;
        
        private string bankNameField;
        
        private string bankCodeField;
        
        private string bankDepositorField;
        
        private string refundDatetimeField;
        
        private string paymentLimitDatetimeField;
        
        private string custimerEmailField;
        
        private string sequenceNoField;
        
        private string approvalNoField;
        
        private string paymentNameField;
        
        private string paymentCodeField;
        
        private string cardSequenceNoField;
        
        private string cashSequenceNoField;
        
        private string accountDateField;
        
        private bool memberDiscountYnField;
        
        private string discountCompPlayDateField;
        
        private bool discountedYnField;
        
        private string checkInYnField;
        
        private string approvalDateField;
        
        private int originalDepostAmountField;
        
        private string groupKindField;
        
        private int productCountField;
        
        private string startTimeField;
        
        private string endTimeField;
        
        private int cmsFeeField;
        
        /// <remarks/>
        public string BookNo {
            get {
                return this.bookNoField;
            }
            set {
                this.bookNoField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public string ThumbnailUrl {
            get {
                return this.thumbnailUrlField;
            }
            set {
                this.thumbnailUrlField = value;
            }
        }
        
        /// <remarks/>
        public string BookDate {
            get {
                return this.bookDateField;
            }
            set {
                this.bookDateField = value;
            }
        }
        
        /// <remarks/>
        public string StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public int TotalAmount {
            get {
                return this.totalAmountField;
            }
            set {
                this.totalAmountField = value;
            }
        }
        
        /// <remarks/>
        public string BookStatus {
            get {
                return this.bookStatusField;
            }
            set {
                this.bookStatusField = value;
            }
        }
        
        /// <remarks/>
        public int DepositAmount {
            get {
                return this.depositAmountField;
            }
            set {
                this.depositAmountField = value;
            }
        }
        
        /// <remarks/>
        public string DepositStatus {
            get {
                return this.depositStatusField;
            }
            set {
                this.depositStatusField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerSSN {
            get {
                return this.customerSSNField;
            }
            set {
                this.customerSSNField = value;
            }
        }
        
        /// <remarks/>
        public int BalanceAmount {
            get {
                return this.balanceAmountField;
            }
            set {
                this.balanceAmountField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerTelephoneNo {
            get {
                return this.customerTelephoneNoField;
            }
            set {
                this.customerTelephoneNoField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerMobileNo {
            get {
                return this.customerMobileNoField;
            }
            set {
                this.customerMobileNoField = value;
            }
        }
        
        /// <remarks/>
        public string BankAccount {
            get {
                return this.bankAccountField;
            }
            set {
                this.bankAccountField = value;
            }
        }
        
        /// <remarks/>
        public string BankName {
            get {
                return this.bankNameField;
            }
            set {
                this.bankNameField = value;
            }
        }
        
        /// <remarks/>
        public string BankCode {
            get {
                return this.bankCodeField;
            }
            set {
                this.bankCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BankDepositor {
            get {
                return this.bankDepositorField;
            }
            set {
                this.bankDepositorField = value;
            }
        }
        
        /// <remarks/>
        public string RefundDatetime {
            get {
                return this.refundDatetimeField;
            }
            set {
                this.refundDatetimeField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentLimitDatetime {
            get {
                return this.paymentLimitDatetimeField;
            }
            set {
                this.paymentLimitDatetimeField = value;
            }
        }
        
        /// <remarks/>
        public string CustimerEmail {
            get {
                return this.custimerEmailField;
            }
            set {
                this.custimerEmailField = value;
            }
        }
        
        /// <remarks/>
        public string SequenceNo {
            get {
                return this.sequenceNoField;
            }
            set {
                this.sequenceNoField = value;
            }
        }
        
        /// <remarks/>
        public string ApprovalNo {
            get {
                return this.approvalNoField;
            }
            set {
                this.approvalNoField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentName {
            get {
                return this.paymentNameField;
            }
            set {
                this.paymentNameField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentCode {
            get {
                return this.paymentCodeField;
            }
            set {
                this.paymentCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CardSequenceNo {
            get {
                return this.cardSequenceNoField;
            }
            set {
                this.cardSequenceNoField = value;
            }
        }
        
        /// <remarks/>
        public string CashSequenceNo {
            get {
                return this.cashSequenceNoField;
            }
            set {
                this.cashSequenceNoField = value;
            }
        }
        
        /// <remarks/>
        public string AccountDate {
            get {
                return this.accountDateField;
            }
            set {
                this.accountDateField = value;
            }
        }
        
        /// <remarks/>
        public bool MemberDiscountYn {
            get {
                return this.memberDiscountYnField;
            }
            set {
                this.memberDiscountYnField = value;
            }
        }
        
        /// <remarks/>
        public string DiscountCompPlayDate {
            get {
                return this.discountCompPlayDateField;
            }
            set {
                this.discountCompPlayDateField = value;
            }
        }
        
        /// <remarks/>
        public bool DiscountedYn {
            get {
                return this.discountedYnField;
            }
            set {
                this.discountedYnField = value;
            }
        }
        
        /// <remarks/>
        public string CheckInYn {
            get {
                return this.checkInYnField;
            }
            set {
                this.checkInYnField = value;
            }
        }
        
        /// <remarks/>
        public string ApprovalDate {
            get {
                return this.approvalDateField;
            }
            set {
                this.approvalDateField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalDepostAmount {
            get {
                return this.originalDepostAmountField;
            }
            set {
                this.originalDepostAmountField = value;
            }
        }
        
        /// <remarks/>
        public string GroupKind {
            get {
                return this.groupKindField;
            }
            set {
                this.groupKindField = value;
            }
        }
        
        /// <remarks/>
        public int ProductCount {
            get {
                return this.productCountField;
            }
            set {
                this.productCountField = value;
            }
        }
        
        /// <remarks/>
        public string StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public string EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public int CmsFee {
            get {
                return this.cmsFeeField;
            }
            set {
                this.cmsFeeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BaseData {
        
        private string serverIpField;
        
        private int serverPortField;
        
        private int paymentLimitHourField;
        
        private string onLineNoField;
        
        private long minProductFeeField;
        
        private long maxProductFeeField;
        
        private int minEntranceLimitField;
        
        private int maxEntranceLimitField;
        
        private string memberTypeField;
        
        private string shopNameField;
        
        private string listBookYnField;
        
        private string mapBookYnField;
        
        private string statusBookYnField;
        
        private string calendarBookYnField;
        
        private int maxSaleCountField;
        
        private string memberCertificationField;
        
        private int memberLimitAgeField;
        
        private int reservationFeeRatioField;
        
        private string passwordSendTypeField;
        
        private string realAccountNoField;
        
        private string memberKindYnField;
        
        private int cancelLimitDaysField;
        
        private int cancelLimitHourField;
        
        private int nearLimitDaysField;
        
        private int nearPaymentLimitHourField;
        
        private string accountKindField;
        
        /// <remarks/>
        public string ServerIp {
            get {
                return this.serverIpField;
            }
            set {
                this.serverIpField = value;
            }
        }
        
        /// <remarks/>
        public int ServerPort {
            get {
                return this.serverPortField;
            }
            set {
                this.serverPortField = value;
            }
        }
        
        /// <remarks/>
        public int PaymentLimitHour {
            get {
                return this.paymentLimitHourField;
            }
            set {
                this.paymentLimitHourField = value;
            }
        }
        
        /// <remarks/>
        public string OnLineNo {
            get {
                return this.onLineNoField;
            }
            set {
                this.onLineNoField = value;
            }
        }
        
        /// <remarks/>
        public long MinProductFee {
            get {
                return this.minProductFeeField;
            }
            set {
                this.minProductFeeField = value;
            }
        }
        
        /// <remarks/>
        public long MaxProductFee {
            get {
                return this.maxProductFeeField;
            }
            set {
                this.maxProductFeeField = value;
            }
        }
        
        /// <remarks/>
        public int MinEntranceLimit {
            get {
                return this.minEntranceLimitField;
            }
            set {
                this.minEntranceLimitField = value;
            }
        }
        
        /// <remarks/>
        public int MaxEntranceLimit {
            get {
                return this.maxEntranceLimitField;
            }
            set {
                this.maxEntranceLimitField = value;
            }
        }
        
        /// <remarks/>
        public string MemberType {
            get {
                return this.memberTypeField;
            }
            set {
                this.memberTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ShopName {
            get {
                return this.shopNameField;
            }
            set {
                this.shopNameField = value;
            }
        }
        
        /// <remarks/>
        public string ListBookYn {
            get {
                return this.listBookYnField;
            }
            set {
                this.listBookYnField = value;
            }
        }
        
        /// <remarks/>
        public string MapBookYn {
            get {
                return this.mapBookYnField;
            }
            set {
                this.mapBookYnField = value;
            }
        }
        
        /// <remarks/>
        public string StatusBookYn {
            get {
                return this.statusBookYnField;
            }
            set {
                this.statusBookYnField = value;
            }
        }
        
        /// <remarks/>
        public string CalendarBookYn {
            get {
                return this.calendarBookYnField;
            }
            set {
                this.calendarBookYnField = value;
            }
        }
        
        /// <remarks/>
        public int MaxSaleCount {
            get {
                return this.maxSaleCountField;
            }
            set {
                this.maxSaleCountField = value;
            }
        }
        
        /// <remarks/>
        public string MemberCertification {
            get {
                return this.memberCertificationField;
            }
            set {
                this.memberCertificationField = value;
            }
        }
        
        /// <remarks/>
        public int MemberLimitAge {
            get {
                return this.memberLimitAgeField;
            }
            set {
                this.memberLimitAgeField = value;
            }
        }
        
        /// <remarks/>
        public int ReservationFeeRatio {
            get {
                return this.reservationFeeRatioField;
            }
            set {
                this.reservationFeeRatioField = value;
            }
        }
        
        /// <remarks/>
        public string PasswordSendType {
            get {
                return this.passwordSendTypeField;
            }
            set {
                this.passwordSendTypeField = value;
            }
        }
        
        /// <remarks/>
        public string RealAccountNo {
            get {
                return this.realAccountNoField;
            }
            set {
                this.realAccountNoField = value;
            }
        }
        
        /// <remarks/>
        public string MemberKindYn {
            get {
                return this.memberKindYnField;
            }
            set {
                this.memberKindYnField = value;
            }
        }
        
        /// <remarks/>
        public int CancelLimitDays {
            get {
                return this.cancelLimitDaysField;
            }
            set {
                this.cancelLimitDaysField = value;
            }
        }
        
        /// <remarks/>
        public int CancelLimitHour {
            get {
                return this.cancelLimitHourField;
            }
            set {
                this.cancelLimitHourField = value;
            }
        }
        
        /// <remarks/>
        public int NearLimitDays {
            get {
                return this.nearLimitDaysField;
            }
            set {
                this.nearLimitDaysField = value;
            }
        }
        
        /// <remarks/>
        public int NearPaymentLimitHour {
            get {
                return this.nearPaymentLimitHourField;
            }
            set {
                this.nearPaymentLimitHourField = value;
            }
        }
        
        /// <remarks/>
        public string AccountKind {
            get {
                return this.accountKindField;
            }
            set {
                this.accountKindField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BoardSchedule {
        
        private string productCodeField;
        
        private string playDateField;
        
        private string playDayField;
        
        private string saleYnField;
        
        private int totalCountField;
        
        private int remainCountField;
        
        private string statusCodeField;
        
        /// <remarks/>
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PlayDate {
            get {
                return this.playDateField;
            }
            set {
                this.playDateField = value;
            }
        }
        
        /// <remarks/>
        public string PlayDay {
            get {
                return this.playDayField;
            }
            set {
                this.playDayField = value;
            }
        }
        
        /// <remarks/>
        public string SaleYn {
            get {
                return this.saleYnField;
            }
            set {
                this.saleYnField = value;
            }
        }
        
        /// <remarks/>
        public int TotalCount {
            get {
                return this.totalCountField;
            }
            set {
                this.totalCountField = value;
            }
        }
        
        /// <remarks/>
        public int RemainCount {
            get {
                return this.remainCountField;
            }
            set {
                this.remainCountField = value;
            }
        }
        
        /// <remarks/>
        public string StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProductMap {
        
        private string groupCodeField;
        
        private string productCodeField;
        
        private string productNameField;
        
        private int xCoordinateField;
        
        private int yCoordinateField;
        
        private int mapWidthField;
        
        private int mapHeightField;
        
        private int remainCountField;
        
        private string statusCodeField;
        
        private string optionYnField;
        
        private int optionAmountField;
        
        private string optionNameField;
        
        private string optionFlagField;
        
        /// <remarks/>
        public string GroupCode {
            get {
                return this.groupCodeField;
            }
            set {
                this.groupCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public int XCoordinate {
            get {
                return this.xCoordinateField;
            }
            set {
                this.xCoordinateField = value;
            }
        }
        
        /// <remarks/>
        public int YCoordinate {
            get {
                return this.yCoordinateField;
            }
            set {
                this.yCoordinateField = value;
            }
        }
        
        /// <remarks/>
        public int MapWidth {
            get {
                return this.mapWidthField;
            }
            set {
                this.mapWidthField = value;
            }
        }
        
        /// <remarks/>
        public int MapHeight {
            get {
                return this.mapHeightField;
            }
            set {
                this.mapHeightField = value;
            }
        }
        
        /// <remarks/>
        public int RemainCount {
            get {
                return this.remainCountField;
            }
            set {
                this.remainCountField = value;
            }
        }
        
        /// <remarks/>
        public string StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OptionYn {
            get {
                return this.optionYnField;
            }
            set {
                this.optionYnField = value;
            }
        }
        
        /// <remarks/>
        public int OptionAmount {
            get {
                return this.optionAmountField;
            }
            set {
                this.optionAmountField = value;
            }
        }
        
        /// <remarks/>
        public string OptionName {
            get {
                return this.optionNameField;
            }
            set {
                this.optionNameField = value;
            }
        }
        
        /// <remarks/>
        public string OptionFlag {
            get {
                return this.optionFlagField;
            }
            set {
                this.optionFlagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProductOption {
        
        private string companyCodeField;
        
        private string shopCodeField;
        
        private string groupCodeField;
        
        private string productCodeField;
        
        private string optionCodeField;
        
        private string optionNameField;
        
        private int optionFeeField;
        
        private int defaultCntField;
        
        private int minCntField;
        
        private int maxCntField;
        
        private int orderNbrField;
        
        private string useFlagField;
        
        /// <remarks/>
        public string CompanyCode {
            get {
                return this.companyCodeField;
            }
            set {
                this.companyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ShopCode {
            get {
                return this.shopCodeField;
            }
            set {
                this.shopCodeField = value;
            }
        }
        
        /// <remarks/>
        public string GroupCode {
            get {
                return this.groupCodeField;
            }
            set {
                this.groupCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OptionCode {
            get {
                return this.optionCodeField;
            }
            set {
                this.optionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OptionName {
            get {
                return this.optionNameField;
            }
            set {
                this.optionNameField = value;
            }
        }
        
        /// <remarks/>
        public int OptionFee {
            get {
                return this.optionFeeField;
            }
            set {
                this.optionFeeField = value;
            }
        }
        
        /// <remarks/>
        public int DefaultCnt {
            get {
                return this.defaultCntField;
            }
            set {
                this.defaultCntField = value;
            }
        }
        
        /// <remarks/>
        public int MinCnt {
            get {
                return this.minCntField;
            }
            set {
                this.minCntField = value;
            }
        }
        
        /// <remarks/>
        public int MaxCnt {
            get {
                return this.maxCntField;
            }
            set {
                this.maxCntField = value;
            }
        }
        
        /// <remarks/>
        public int OrderNbr {
            get {
                return this.orderNbrField;
            }
            set {
                this.orderNbrField = value;
            }
        }
        
        /// <remarks/>
        public string UseFlag {
            get {
                return this.useFlagField;
            }
            set {
                this.useFlagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Postal {
        
        private string postalCodeField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string address4Field;
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string Address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
            }
        }
        
        /// <remarks/>
        public string Address4 {
            get {
                return this.address4Field;
            }
            set {
                this.address4Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TicketSale {
        
        private string productCodeField;
        
        private string productNameField;
        
        private string playDateField;
        
        private int playSequenceField;
        
        private int saleSequenceField;
        
        private int productFeeField;
        
        private int refundRatioField;
        
        private int penaltyFeeField;
        
        private bool refundProcessField;
        
        private string fullPaymentYnField;
        
        private string fullPaymentNameField;
        
        private string depositPaymentYnField;
        
        private string depositPaymentNameField;
        
        private string workDatetimeField;
        
        private string discountYnField;
        
        private string preminmYnField;
        
        private string memberDiscountYnField;
        
        private int overNumberCountField;
        
        private int overNumberFeeField;
        
        private int overTimeFeeField;
        
        private int optionFeeField;
        
        private string bookNoField;
        
        /// <remarks/>
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public string PlayDate {
            get {
                return this.playDateField;
            }
            set {
                this.playDateField = value;
            }
        }
        
        /// <remarks/>
        public int PlaySequence {
            get {
                return this.playSequenceField;
            }
            set {
                this.playSequenceField = value;
            }
        }
        
        /// <remarks/>
        public int SaleSequence {
            get {
                return this.saleSequenceField;
            }
            set {
                this.saleSequenceField = value;
            }
        }
        
        /// <remarks/>
        public int ProductFee {
            get {
                return this.productFeeField;
            }
            set {
                this.productFeeField = value;
            }
        }
        
        /// <remarks/>
        public int RefundRatio {
            get {
                return this.refundRatioField;
            }
            set {
                this.refundRatioField = value;
            }
        }
        
        /// <remarks/>
        public int PenaltyFee {
            get {
                return this.penaltyFeeField;
            }
            set {
                this.penaltyFeeField = value;
            }
        }
        
        /// <remarks/>
        public bool RefundProcess {
            get {
                return this.refundProcessField;
            }
            set {
                this.refundProcessField = value;
            }
        }
        
        /// <remarks/>
        public string FullPaymentYn {
            get {
                return this.fullPaymentYnField;
            }
            set {
                this.fullPaymentYnField = value;
            }
        }
        
        /// <remarks/>
        public string FullPaymentName {
            get {
                return this.fullPaymentNameField;
            }
            set {
                this.fullPaymentNameField = value;
            }
        }
        
        /// <remarks/>
        public string DepositPaymentYn {
            get {
                return this.depositPaymentYnField;
            }
            set {
                this.depositPaymentYnField = value;
            }
        }
        
        /// <remarks/>
        public string DepositPaymentName {
            get {
                return this.depositPaymentNameField;
            }
            set {
                this.depositPaymentNameField = value;
            }
        }
        
        /// <remarks/>
        public string WorkDatetime {
            get {
                return this.workDatetimeField;
            }
            set {
                this.workDatetimeField = value;
            }
        }
        
        /// <remarks/>
        public string DiscountYn {
            get {
                return this.discountYnField;
            }
            set {
                this.discountYnField = value;
            }
        }
        
        /// <remarks/>
        public string PreminmYn {
            get {
                return this.preminmYnField;
            }
            set {
                this.preminmYnField = value;
            }
        }
        
        /// <remarks/>
        public string MemberDiscountYn {
            get {
                return this.memberDiscountYnField;
            }
            set {
                this.memberDiscountYnField = value;
            }
        }
        
        /// <remarks/>
        public int OverNumberCount {
            get {
                return this.overNumberCountField;
            }
            set {
                this.overNumberCountField = value;
            }
        }
        
        /// <remarks/>
        public int OverNumberFee {
            get {
                return this.overNumberFeeField;
            }
            set {
                this.overNumberFeeField = value;
            }
        }
        
        /// <remarks/>
        public int OverTimeFee {
            get {
                return this.overTimeFeeField;
            }
            set {
                this.overTimeFeeField = value;
            }
        }
        
        /// <remarks/>
        public int OptionFee {
            get {
                return this.optionFeeField;
            }
            set {
                this.optionFeeField = value;
            }
        }
        
        /// <remarks/>
        public string BookNo {
            get {
                return this.bookNoField;
            }
            set {
                this.bookNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OptionSale {
        
        private string companyCodeField;
        
        private string shopCodeField;
        
        private string productCodeField;
        
        private string productNameField;
        
        private string playDateField;
        
        private string optionCodeField;
        
        private string optionNameField;
        
        private int playSequenceField;
        
        private int saleSequenceField;
        
        private string refundFlagField;
        
        private int optionFeeField;
        
        private int saleCntField;
        
        private int paymentFeeField;
        
        private int refundFeeField;
        
        /// <remarks/>
        public string CompanyCode {
            get {
                return this.companyCodeField;
            }
            set {
                this.companyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ShopCode {
            get {
                return this.shopCodeField;
            }
            set {
                this.shopCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public string PlayDate {
            get {
                return this.playDateField;
            }
            set {
                this.playDateField = value;
            }
        }
        
        /// <remarks/>
        public string OptionCode {
            get {
                return this.optionCodeField;
            }
            set {
                this.optionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OptionName {
            get {
                return this.optionNameField;
            }
            set {
                this.optionNameField = value;
            }
        }
        
        /// <remarks/>
        public int PlaySequence {
            get {
                return this.playSequenceField;
            }
            set {
                this.playSequenceField = value;
            }
        }
        
        /// <remarks/>
        public int SaleSequence {
            get {
                return this.saleSequenceField;
            }
            set {
                this.saleSequenceField = value;
            }
        }
        
        /// <remarks/>
        public string RefundFlag {
            get {
                return this.refundFlagField;
            }
            set {
                this.refundFlagField = value;
            }
        }
        
        /// <remarks/>
        public int OptionFee {
            get {
                return this.optionFeeField;
            }
            set {
                this.optionFeeField = value;
            }
        }
        
        /// <remarks/>
        public int SaleCnt {
            get {
                return this.saleCntField;
            }
            set {
                this.saleCntField = value;
            }
        }
        
        /// <remarks/>
        public int PaymentFee {
            get {
                return this.paymentFeeField;
            }
            set {
                this.paymentFeeField = value;
            }
        }
        
        /// <remarks/>
        public int RefundFee {
            get {
                return this.refundFeeField;
            }
            set {
                this.refundFeeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustomerCMS {
        
        private string bankNameField;
        
        private string bankAccountField;
        
        private string depositorField;
        
        private string depositorSSNField;
        
        private int receiptFeeField;
        
        private int bankFeeField;
        
        private string resultCodeField;
        
        private string errorCodeField;
        
        private string errorMessageField;
        
        private string bookNoField;
        
        /// <remarks/>
        public string BankName {
            get {
                return this.bankNameField;
            }
            set {
                this.bankNameField = value;
            }
        }
        
        /// <remarks/>
        public string BankAccount {
            get {
                return this.bankAccountField;
            }
            set {
                this.bankAccountField = value;
            }
        }
        
        /// <remarks/>
        public string Depositor {
            get {
                return this.depositorField;
            }
            set {
                this.depositorField = value;
            }
        }
        
        /// <remarks/>
        public string DepositorSSN {
            get {
                return this.depositorSSNField;
            }
            set {
                this.depositorSSNField = value;
            }
        }
        
        /// <remarks/>
        public int ReceiptFee {
            get {
                return this.receiptFeeField;
            }
            set {
                this.receiptFeeField = value;
            }
        }
        
        /// <remarks/>
        public int BankFee {
            get {
                return this.bankFeeField;
            }
            set {
                this.bankFeeField = value;
            }
        }
        
        /// <remarks/>
        public string ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public string BookNo {
            get {
                return this.bookNoField;
            }
            set {
                this.bookNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MemberInformation {
        
        private string memberCodeField;
        
        private string memberNameField;
        
        private string passWordField;
        
        private string memberKindCodeField;
        
        private string mobileNoField;
        
        private string telephoneNoField;
        
        private string memberEmailField;
        
        private string memberSSNField;
        
        private string discountCodeField;
        
        private int discountValueField;
        
        private int addDiscountValueField;
        
        /// <remarks/>
        public string MemberCode {
            get {
                return this.memberCodeField;
            }
            set {
                this.memberCodeField = value;
            }
        }
        
        /// <remarks/>
        public string MemberName {
            get {
                return this.memberNameField;
            }
            set {
                this.memberNameField = value;
            }
        }
        
        /// <remarks/>
        public string PassWord {
            get {
                return this.passWordField;
            }
            set {
                this.passWordField = value;
            }
        }
        
        /// <remarks/>
        public string MemberKindCode {
            get {
                return this.memberKindCodeField;
            }
            set {
                this.memberKindCodeField = value;
            }
        }
        
        /// <remarks/>
        public string MobileNo {
            get {
                return this.mobileNoField;
            }
            set {
                this.mobileNoField = value;
            }
        }
        
        /// <remarks/>
        public string TelephoneNo {
            get {
                return this.telephoneNoField;
            }
            set {
                this.telephoneNoField = value;
            }
        }
        
        /// <remarks/>
        public string MemberEmail {
            get {
                return this.memberEmailField;
            }
            set {
                this.memberEmailField = value;
            }
        }
        
        /// <remarks/>
        public string MemberSSN {
            get {
                return this.memberSSNField;
            }
            set {
                this.memberSSNField = value;
            }
        }
        
        /// <remarks/>
        public string DiscountCode {
            get {
                return this.discountCodeField;
            }
            set {
                this.discountCodeField = value;
            }
        }
        
        /// <remarks/>
        public int DiscountValue {
            get {
                return this.discountValueField;
            }
            set {
                this.discountValueField = value;
            }
        }
        
        /// <remarks/>
        public int AddDiscountValue {
            get {
                return this.addDiscountValueField;
            }
            set {
                this.addDiscountValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MemberKind {
        
        private string memberKindCodeField;
        
        private string memberKindNameField;
        
        private string discountCodeField;
        
        private string discountNameField;
        
        private int discountValueField;
        
        private string remarkField;
        
        /// <remarks/>
        public string MemberKindCode {
            get {
                return this.memberKindCodeField;
            }
            set {
                this.memberKindCodeField = value;
            }
        }
        
        /// <remarks/>
        public string MemberKindName {
            get {
                return this.memberKindNameField;
            }
            set {
                this.memberKindNameField = value;
            }
        }
        
        /// <remarks/>
        public string DiscountCode {
            get {
                return this.discountCodeField;
            }
            set {
                this.discountCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DiscountName {
            get {
                return this.discountNameField;
            }
            set {
                this.discountNameField = value;
            }
        }
        
        /// <remarks/>
        public int DiscountValue {
            get {
                return this.discountValueField;
            }
            set {
                this.discountValueField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Payment {
        
        private string paymentCodeField;
        
        private string paymentNameField;
        
        private string controlNoteField;
        
        /// <remarks/>
        public string PaymentCode {
            get {
                return this.paymentCodeField;
            }
            set {
                this.paymentCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentName {
            get {
                return this.paymentNameField;
            }
            set {
                this.paymentNameField = value;
            }
        }
        
        /// <remarks/>
        public string ControlNote {
            get {
                return this.controlNoteField;
            }
            set {
                this.controlNoteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProductGroupByBookCompletedEventHandler(object sender, GetProductGroupByBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductGroupByBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductGroupByBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProductByBookCompletedEventHandler(object sender, GetProductByBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductByBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductByBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProductByTimeTableCompletedEventHandler(object sender, GetProductByTimeTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductByTimeTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductByTimeTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProductImageCompletedEventHandler(object sender, GetProductImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetScheduleByBookCompletedEventHandler(object sender, GetScheduleByBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleByBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleByBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetScheduleByTimeTableCompletedEventHandler(object sender, GetScheduleByTimeTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleByTimeTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleByTimeTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetScheduleByGroupCompletedEventHandler(object sender, GetScheduleByGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleByGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleByGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCommonByGroupCompletedEventHandler(object sender, GetCommonByGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommonByGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommonByGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetMyPageCompletedEventHandler(object sender, GetMyPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CalBongGetMyPageCompletedEventHandler(object sender, CalBongGetMyPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalBongGetMyPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalBongGetMyPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetBaseDataCompletedEventHandler(object sender, GetBaseDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBaseDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBaseDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetBoardScheduleCompletedEventHandler(object sender, GetBoardScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoardScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoardScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProductMapCompletedEventHandler(object sender, GetProductMapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetScheduleByGroupMapCompletedEventHandler(object sender, GetScheduleByGroupMapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleByGroupMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleByGroupMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProductOptionCompletedEventHandler(object sender, GetProductOptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductOptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductOptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPostalCompletedEventHandler(object sender, GetPostalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetBookDetailByTicketSaleCompletedEventHandler(object sender, GetBookDetailByTicketSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBookDetailByTicketSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBookDetailByTicketSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetBookDetailByTicketRefundCompletedEventHandler(object sender, GetBookDetailByTicketRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBookDetailByTicketRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBookDetailByTicketRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetBookDetailByOptionSaleCompletedEventHandler(object sender, GetBookDetailByOptionSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBookDetailByOptionSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBookDetailByOptionSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCustomerCMSCompletedEventHandler(object sender, GetCustomerCMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerCMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerCMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetMemberLoginCompletedEventHandler(object sender, GetMemberLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUnMemberLoginCompletedEventHandler(object sender, GetUnMemberLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnMemberLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnMemberLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetMemberLoginByGuestCompletedEventHandler(object sender, GetMemberLoginByGuestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberLoginByGuestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberLoginByGuestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetMemberDiscountDateCompletedEventHandler(object sender, GetMemberDiscountDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberDiscountDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberDiscountDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUnMemberCodeCompletedEventHandler(object sender, GetUnMemberCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnMemberCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnMemberCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetSystemDateTimeCompletedEventHandler(object sender, GetSystemDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetMemberKindCompletedEventHandler(object sender, GetMemberKindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberKindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberKindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProductBySeatCompletedEventHandler(object sender, GetProductBySeatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductBySeatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductBySeatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetShopPaymentByWebCompletedEventHandler(object sender, GetShopPaymentByWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShopPaymentByWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShopPaymentByWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void BookingCompletedEventHandler(object sender, BookingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void BookingByGroupCompletedEventHandler(object sender, BookingByGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookingByGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookingByGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void BookingByGroupNewCompletedEventHandler(object sender, BookingByGroupNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookingByGroupNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookingByGroupNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void BookingByTimeCompletedEventHandler(object sender, BookingByTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookingByTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookingByTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetProductFilterListCompletedEventHandler(object sender, GetProductFilterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductFilterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductFilterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SaveBookByBankInformationCompletedEventHandler(object sender, SaveBookByBankInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveBookByBankInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveBookByBankInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SaveMemberDiscountCompletedEventHandler(object sender, SaveMemberDiscountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveMemberDiscountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveMemberDiscountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SaveMemberDiscountCancelCompletedEventHandler(object sender, SaveMemberDiscountCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveMemberDiscountCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveMemberDiscountCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SaveBankInfomationOrCarNumberCompletedEventHandler(object sender, SaveBankInfomationOrCarNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveBankInfomationOrCarNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveBankInfomationOrCarNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void LodgingRefundByWebCompletedEventHandler(object sender, LodgingRefundByWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LodgingRefundByWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LodgingRefundByWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void LodgingRefundByWeb2CompletedEventHandler(object sender, LodgingRefundByWeb2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LodgingRefundByWeb2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LodgingRefundByWeb2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RefundCompletedEventHandler(object sender, RefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void Refund2CompletedEventHandler(object sender, Refund2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Refund2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Refund2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void BookPaymentByGeneralCardCompletedEventHandler(object sender, BookPaymentByGeneralCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookPaymentByGeneralCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookPaymentByGeneralCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void BookPaymentByISPCompletedEventHandler(object sender, BookPaymentByISPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookPaymentByISPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookPaymentByISPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void BookPaymentBy3DCompletedEventHandler(object sender, BookPaymentBy3DCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookPaymentBy3DCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookPaymentBy3DCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void BookPaymentByRealAccountKFTCCompletedEventHandler(object sender, BookPaymentByRealAccountKFTCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookPaymentByRealAccountKFTCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookPaymentByRealAccountKFTCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void BookPaymentByRealAccountKFTCByAuthCompletedEventHandler(object sender, BookPaymentByRealAccountKFTCByAuthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookPaymentByRealAccountKFTCByAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookPaymentByRealAccountKFTCByAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void BookPaymentByVirtualCompletedEventHandler(object sender, BookPaymentByVirtualCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookPaymentByVirtualCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookPaymentByVirtualCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void BookPaymentByMobileCompletedEventHandler(object sender, BookPaymentByMobileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookPaymentByMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookPaymentByMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void BookAfterApprovalCashSaveCompletedEventHandler(object sender, BookAfterApprovalCashSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookAfterApprovalCashSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookAfterApprovalCashSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AuthenticationMobilePaymentCompletedEventHandler(object sender, AuthenticationMobilePaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticationMobilePaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticationMobilePaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetBookRefundedCompletedEventHandler(object sender, GetBookRefundedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBookRefundedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBookRefundedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MobileCertificationCompletedEventHandler(object sender, MobileCertificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileCertificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileCertificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SaveMemberCertificationCompletedEventHandler(object sender, SaveMemberCertificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveMemberCertificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveMemberCertificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RealNameCertificationCompletedEventHandler(object sender, RealNameCertificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RealNameCertificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RealNameCertificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RealNameCertificationOtherCompletedEventHandler(object sender, RealNameCertificationOtherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RealNameCertificationOtherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RealNameCertificationOtherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetMemberIdCheckCompletedEventHandler(object sender, GetMemberIdCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberIdCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberIdCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MemberJoinCompletedEventHandler(object sender, MemberJoinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MemberJoinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MemberJoinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MemberJoinByIPinCompletedEventHandler(object sender, MemberJoinByIPinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MemberJoinByIPinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MemberJoinByIPinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetMemberExistsByMobileNoCompletedEventHandler(object sender, GetMemberExistsByMobileNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberExistsByMobileNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberExistsByMobileNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetMemberExistsCompletedEventHandler(object sender, GetMemberExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetMemberIdByMobileNoCompletedEventHandler(object sender, GetMemberIdByMobileNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberIdByMobileNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberIdByMobileNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetMemberPasswordCompletedEventHandler(object sender, GetMemberPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SendMemberPwCompletedEventHandler(object sender, SendMemberPwCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMemberPwCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMemberPwCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCardSequenceNoCompletedEventHandler(object sender, GetCardSequenceNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardSequenceNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardSequenceNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SaveMemberByWithdrawCompletedEventHandler(object sender, SaveMemberByWithdrawCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveMemberByWithdrawCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveMemberByWithdrawCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SaveMemberByEditCompletedEventHandler(object sender, SaveMemberByEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveMemberByEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveMemberByEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetMemberCompletedEventHandler(object sender, GetMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetDrawEndDateCompletedEventHandler(object sender, GetDrawEndDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrawEndDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrawEndDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591